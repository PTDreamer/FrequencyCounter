// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "10/08/2020 16:07:01"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module top (
	refclk,
	miso,
	mosi,
	sck,
	ss,
	icp1,
	icp0,
	int1,
	modeshift,
	led2,
	led,
	rampstopN,
	rampstartP,
	sigclk,
	sigout,
	sigin1,
	sigin2);
input 	refclk;
output 	miso;
input 	mosi;
input 	sck;
input 	ss;
output 	icp1;
output 	icp0;
output 	int1;
input 	modeshift;
output 	led2;
output 	led;
output 	rampstopN;
output 	rampstartP;
input 	sigclk;
output 	sigout;
input 	sigin1;
input 	sigin2;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \sck~combout ;
wire \ss~combout ;
wire \sigclk~combout ;
wire \eventcounter[1]~15 ;
wire \eventcounter[1]~15COUT1_32 ;
wire \eventcounter[2]~7 ;
wire \eventcounter[3]~29 ;
wire \eventcounter[3]~29COUT1_33 ;
wire \eventcounter[4]~21 ;
wire \eventcounter[4]~21COUT1_34 ;
wire \syn1siggate~regout ;
wire \refclk~combout ;
wire \LessThan0~30_combout ;
wire \ledblink:count[0]~regout ;
wire \ledblink:count[0]~1 ;
wire \ledblink:count[0]~1COUT1_3 ;
wire \ledblink:count[1]~regout ;
wire \ledblink:count[1]~1 ;
wire \ledblink:count[1]~1COUT1_3 ;
wire \ledblink:count[2]~regout ;
wire \ledblink:count[2]~1 ;
wire \ledblink:count[2]~1COUT1_3 ;
wire \ledblink:count[3]~regout ;
wire \ledblink:count[3]~1 ;
wire \ledblink:count[3]~1COUT1_3 ;
wire \ledblink:count[4]~regout ;
wire \ledblink:count[4]~1 ;
wire \ledblink:count[5]~regout ;
wire \ledblink:count[5]~1 ;
wire \ledblink:count[5]~1COUT1_3 ;
wire \ledblink:count[6]~regout ;
wire \ledblink:count[6]~1 ;
wire \ledblink:count[6]~1COUT1_3 ;
wire \ledblink:count[7]~regout ;
wire \ledblink:count[7]~1 ;
wire \ledblink:count[7]~1COUT1_3 ;
wire \ledblink:count[8]~regout ;
wire \ledblink:count[8]~1 ;
wire \ledblink:count[8]~1COUT1_3 ;
wire \ledblink:count[9]~regout ;
wire \ledblink:count[9]~1 ;
wire \ledblink:count[10]~regout ;
wire \ledblink:count[10]~1 ;
wire \ledblink:count[10]~1COUT1_3 ;
wire \ledblink:count[11]~regout ;
wire \ledblink:count[11]~1 ;
wire \ledblink:count[11]~1COUT1_3 ;
wire \ledblink:count[12]~regout ;
wire \ledblink:count[12]~1 ;
wire \ledblink:count[12]~1COUT1_3 ;
wire \ledblink:count[13]~regout ;
wire \ledblink:count[13]~1 ;
wire \ledblink:count[13]~1COUT1_3 ;
wire \ledblink:count[14]~regout ;
wire \ledblink:count[14]~1 ;
wire \ledblink:count[15]~regout ;
wire \ledblink:count[15]~1 ;
wire \ledblink:count[15]~1COUT1_3 ;
wire \ledblink:count[16]~regout ;
wire \ledblink:count[16]~1 ;
wire \ledblink:count[16]~1COUT1_3 ;
wire \ledblink:count[17]~regout ;
wire \ledblink:count[17]~1 ;
wire \ledblink:count[17]~1COUT1_3 ;
wire \ledblink:count[18]~regout ;
wire \ledblink:count[18]~1 ;
wire \ledblink:count[18]~1COUT1_3 ;
wire \ledblink:count[19]~regout ;
wire \ledblink:count[19]~1 ;
wire \ledblink:count[20]~regout ;
wire \ledblink:count[20]~1 ;
wire \ledblink:count[20]~1COUT1_3 ;
wire \ledblink:count[21]~regout ;
wire \ledblink:count[21]~1 ;
wire \ledblink:count[21]~1COUT1_3 ;
wire \ledblink:count[22]~1 ;
wire \ledblink:count[22]~1COUT1_3 ;
wire \ledblink:count[23]~regout ;
wire \ledblink:count[23]~1 ;
wire \ledblink:count[23]~1COUT1_3 ;
wire \ledblink:count[24]~regout ;
wire \ledblink:count[24]~1 ;
wire \ledblink:count[25]~regout ;
wire \ledblink:count[25]~1 ;
wire \ledblink:count[25]~1COUT1_3 ;
wire \ledblink:count[26]~regout ;
wire \LessThan0~8_combout ;
wire \LessThan0~27_combout ;
wire \LessThan0~9_combout ;
wire \LessThan0~10_combout ;
wire \LessThan0~28_combout ;
wire \LessThan0~29_combout ;
wire \LessThan0~31_combout ;
wire \ledblink:count[26]~1 ;
wire \ledblink:count[26]~1COUT1_3 ;
wire \ledblink:count[27]~regout ;
wire \ledblink:count[27]~1 ;
wire \ledblink:count[27]~1COUT1_3 ;
wire \ledblink:count[28]~regout ;
wire \ledblink:count[28]~1 ;
wire \ledblink:count[28]~1COUT1_3 ;
wire \ledblink:count[29]~regout ;
wire \ledblink:count[29]~1 ;
wire \ledblink:count[30]~regout ;
wire \count~0_combout ;
wire \LessThan1~10_combout ;
wire \LessThan1~11_combout ;
wire \LessThan1~12_combout ;
wire \LessThan1~13_combout ;
wire \Equal0~0_combout ;
wire \LessThan1~29_combout ;
wire \LessThan1~30_combout ;
wire \mosi~combout ;
wire \modeshift~combout ;
wire \LessThan1~15 ;
wire \LessThan1~32_combout ;
wire \LessThan1~34_combout ;
wire \LessThan1~35_combout ;
wire \max_count~0_combout ;
wire \LessThan1~26_combout ;
wire \LessThan1~33_combout ;
wire \LessThan1~27_combout ;
wire \LessThan1~14_combout ;
wire \LessThan1~16_combout ;
wire \LessThan1~17_combout ;
wire \LessThan1~18_combout ;
wire \LessThan1~9_combout ;
wire \LessThan1~7_combout ;
wire \LessThan1~6 ;
wire \LessThan1~23_combout ;
wire \LessThan1~24_combout ;
wire \LessThan1~19_combout ;
wire \LessThan1~20_combout ;
wire \LessThan1~8_combout ;
wire \LessThan1~21_combout ;
wire \LessThan1~22_combout ;
wire \LessThan1~25_combout ;
wire \LessThan1~28_combout ;
wire \LessThan1~31_combout ;
wire \LessThan0~34_combout ;
wire \LessThan0~12_combout ;
wire \LessThan0~13_combout ;
wire \LessThan0~33_combout ;
wire \LessThan0~25_combout ;
wire \LessThan0~32_combout ;
wire \LessThan0~11_combout ;
wire \LessThan0~14_combout ;
wire \LessThan0~15_combout ;
wire \LessThan0~19_combout ;
wire \LessThan0~20_combout ;
wire \LessThan0~21_combout ;
wire \LessThan0~16_combout ;
wire \LessThan0~17_combout ;
wire \LessThan0~18_combout ;
wire \LessThan0~22_combout ;
wire \LessThan0~23_combout ;
wire \LessThan0~24_combout ;
wire \LessThan0~26_combout ;
wire \count~1_combout ;
wire \ledblink:count[22]~regout ;
wire \siggate~regout ;
wire \Mux0~2 ;
wire \eventcounter[5]~13 ;
wire \eventcounter[5]~13COUT1_35 ;
wire \eventcounter[6]~3 ;
wire \eventcounter[6]~3COUT1_36 ;
wire \eventcounter[7]~25 ;
wire \eventcounter[8]~19 ;
wire \eventcounter[8]~19COUT1_37 ;
wire \eventcounter[9]~11 ;
wire \eventcounter[9]~11COUT1_38 ;
wire \eventcounter[10]~5 ;
wire \eventcounter[10]~5COUT1_39 ;
wire \eventcounter[11]~27 ;
wire \eventcounter[11]~27COUT1_40 ;
wire \eventcounter[12]~23 ;
wire \Mux0~3 ;
wire \Mux0~4 ;
wire \Mux0~5 ;
wire \Mux0~6_combout ;
wire \eventcounter[13]~17 ;
wire \eventcounter[13]~17COUT1_41 ;
wire \eventcounter[14]~9 ;
wire \eventcounter[14]~9COUT1_42 ;
wire \Mux0~7 ;
wire \Mux0~8 ;
wire \Mux0~0 ;
wire \Mux0~1 ;
wire \Mux0~9_combout ;
wire \syn1cpugate~regout ;
wire \cpugate~regout ;
wire \led~reg0_regout ;
wire \sigin1~combout ;
wire \sigout~0_combout ;
wire \sigin2~combout ;
wire \sigout~1_combout ;
wire [3:0] mux;
wire [15:0] eventhold;
wire [15:0] eventcounter;
wire [3:0] readindex;


// Location: PIN_62,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \sck~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\sck~combout ),
	.padio(sck));
// synopsys translate_off
defparam \sck~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_64,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \ss~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\ss~combout ),
	.padio(ss));
// synopsys translate_off
defparam \ss~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y2_N3
maxii_lcell \readindex[0] (
// Equation(s):
// readindex[0] = DFFEAS((((!readindex[0]))), GLOBAL(\sck~combout ), GLOBAL(\ss~combout ), , , , , , )

	.clk(\sck~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(readindex[0]),
	.aclr(!\ss~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(readindex[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \readindex[0] .lut_mask = "00ff";
defparam \readindex[0] .operation_mode = "normal";
defparam \readindex[0] .output_mode = "reg_only";
defparam \readindex[0] .register_cascade_mode = "off";
defparam \readindex[0] .sum_lutc_input = "datac";
defparam \readindex[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N6
maxii_lcell \readindex[1] (
// Equation(s):
// readindex[1] = DFFEAS(((readindex[1] $ (!readindex[0]))), GLOBAL(\sck~combout ), GLOBAL(\ss~combout ), , , , , , )

	.clk(\sck~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(readindex[1]),
	.datad(readindex[0]),
	.aclr(!\ss~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(readindex[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \readindex[1] .lut_mask = "f00f";
defparam \readindex[1] .operation_mode = "normal";
defparam \readindex[1] .output_mode = "reg_only";
defparam \readindex[1] .register_cascade_mode = "off";
defparam \readindex[1] .sum_lutc_input = "datac";
defparam \readindex[1] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \sigclk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\sigclk~combout ),
	.padio(sigclk));
// synopsys translate_off
defparam \sigclk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y2_N7
maxii_lcell \readindex[2] (
// Equation(s):
// readindex[2] = DFFEAS((readindex[2] $ (((!readindex[1] & !readindex[0])))), GLOBAL(\sck~combout ), GLOBAL(\ss~combout ), , , , , , )

	.clk(\sck~combout ),
	.dataa(readindex[1]),
	.datab(vcc),
	.datac(readindex[2]),
	.datad(readindex[0]),
	.aclr(!\ss~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(readindex[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \readindex[2] .lut_mask = "f0a5";
defparam \readindex[2] .operation_mode = "normal";
defparam \readindex[2] .output_mode = "reg_only";
defparam \readindex[2] .register_cascade_mode = "off";
defparam \readindex[2] .sum_lutc_input = "datac";
defparam \readindex[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N8
maxii_lcell \readindex[3] (
// Equation(s):
// readindex[3] = DFFEAS(readindex[3] $ (((!readindex[0] & (!readindex[2] & !readindex[1])))), GLOBAL(\sck~combout ), GLOBAL(\ss~combout ), , , , , , )

	.clk(\sck~combout ),
	.dataa(readindex[0]),
	.datab(readindex[2]),
	.datac(readindex[1]),
	.datad(readindex[3]),
	.aclr(!\ss~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(readindex[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \readindex[3] .lut_mask = "fe01";
defparam \readindex[3] .operation_mode = "normal";
defparam \readindex[3] .output_mode = "reg_only";
defparam \readindex[3] .register_cascade_mode = "off";
defparam \readindex[3] .sum_lutc_input = "datac";
defparam \readindex[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N2
maxii_lcell \eventcounter[0] (
// Equation(s):
// eventcounter[0] = DFFEAS((((!eventcounter[0]))), GLOBAL(\sigclk~combout ), VCC, , , , , , )

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(eventcounter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventcounter[0] .lut_mask = "00ff";
defparam \eventcounter[0] .operation_mode = "normal";
defparam \eventcounter[0] .output_mode = "reg_only";
defparam \eventcounter[0] .register_cascade_mode = "off";
defparam \eventcounter[0] .sum_lutc_input = "datac";
defparam \eventcounter[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N3
maxii_lcell \eventcounter[1] (
// Equation(s):
// eventcounter[1] = DFFEAS(eventcounter[1] $ ((eventcounter[0])), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[1]~15  = CARRY((eventcounter[1] & (eventcounter[0])))
// \eventcounter[1]~15COUT1_32  = CARRY((eventcounter[1] & (eventcounter[0])))

	.clk(\sigclk~combout ),
	.dataa(eventcounter[1]),
	.datab(eventcounter[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[1]),
	.cout(),
	.cout0(\eventcounter[1]~15 ),
	.cout1(\eventcounter[1]~15COUT1_32 ));
// synopsys translate_off
defparam \eventcounter[1] .lut_mask = "6688";
defparam \eventcounter[1] .operation_mode = "arithmetic";
defparam \eventcounter[1] .output_mode = "reg_only";
defparam \eventcounter[1] .register_cascade_mode = "off";
defparam \eventcounter[1] .sum_lutc_input = "datac";
defparam \eventcounter[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N4
maxii_lcell \eventcounter[2] (
// Equation(s):
// eventcounter[2] = DFFEAS(eventcounter[2] $ ((((\eventcounter[1]~15 )))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[2]~7  = CARRY(((!\eventcounter[1]~15COUT1_32 )) # (!eventcounter[2]))

	.clk(\sigclk~combout ),
	.dataa(eventcounter[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\eventcounter[1]~15 ),
	.cin1(\eventcounter[1]~15COUT1_32 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[2]),
	.cout(\eventcounter[2]~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventcounter[2] .cin0_used = "true";
defparam \eventcounter[2] .cin1_used = "true";
defparam \eventcounter[2] .lut_mask = "5a5f";
defparam \eventcounter[2] .operation_mode = "arithmetic";
defparam \eventcounter[2] .output_mode = "reg_only";
defparam \eventcounter[2] .register_cascade_mode = "off";
defparam \eventcounter[2] .sum_lutc_input = "cin";
defparam \eventcounter[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N5
maxii_lcell \eventcounter[3] (
// Equation(s):
// eventcounter[3] = DFFEAS(eventcounter[3] $ ((((!\eventcounter[2]~7 )))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[3]~29  = CARRY((eventcounter[3] & ((!\eventcounter[2]~7 ))))
// \eventcounter[3]~29COUT1_33  = CARRY((eventcounter[3] & ((!\eventcounter[2]~7 ))))

	.clk(\sigclk~combout ),
	.dataa(eventcounter[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[2]~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[3]),
	.cout(),
	.cout0(\eventcounter[3]~29 ),
	.cout1(\eventcounter[3]~29COUT1_33 ));
// synopsys translate_off
defparam \eventcounter[3] .cin_used = "true";
defparam \eventcounter[3] .lut_mask = "a50a";
defparam \eventcounter[3] .operation_mode = "arithmetic";
defparam \eventcounter[3] .output_mode = "reg_only";
defparam \eventcounter[3] .register_cascade_mode = "off";
defparam \eventcounter[3] .sum_lutc_input = "cin";
defparam \eventcounter[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N6
maxii_lcell \eventcounter[4] (
// Equation(s):
// eventcounter[4] = DFFEAS(eventcounter[4] $ (((((!\eventcounter[2]~7  & \eventcounter[3]~29 ) # (\eventcounter[2]~7  & \eventcounter[3]~29COUT1_33 ))))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[4]~21  = CARRY(((!\eventcounter[3]~29 )) # (!eventcounter[4]))
// \eventcounter[4]~21COUT1_34  = CARRY(((!\eventcounter[3]~29COUT1_33 )) # (!eventcounter[4]))

	.clk(\sigclk~combout ),
	.dataa(eventcounter[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[2]~7 ),
	.cin0(\eventcounter[3]~29 ),
	.cin1(\eventcounter[3]~29COUT1_33 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[4]),
	.cout(),
	.cout0(\eventcounter[4]~21 ),
	.cout1(\eventcounter[4]~21COUT1_34 ));
// synopsys translate_off
defparam \eventcounter[4] .cin0_used = "true";
defparam \eventcounter[4] .cin1_used = "true";
defparam \eventcounter[4] .cin_used = "true";
defparam \eventcounter[4] .lut_mask = "5a5f";
defparam \eventcounter[4] .operation_mode = "arithmetic";
defparam \eventcounter[4] .output_mode = "reg_only";
defparam \eventcounter[4] .register_cascade_mode = "off";
defparam \eventcounter[4] .sum_lutc_input = "cin";
defparam \eventcounter[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N7
maxii_lcell \eventcounter[5] (
// Equation(s):
// eventcounter[5] = DFFEAS((eventcounter[5] $ ((!(!\eventcounter[2]~7  & \eventcounter[4]~21 ) # (\eventcounter[2]~7  & \eventcounter[4]~21COUT1_34 )))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[5]~13  = CARRY(((eventcounter[5] & !\eventcounter[4]~21 )))
// \eventcounter[5]~13COUT1_35  = CARRY(((eventcounter[5] & !\eventcounter[4]~21COUT1_34 )))

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(eventcounter[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[2]~7 ),
	.cin0(\eventcounter[4]~21 ),
	.cin1(\eventcounter[4]~21COUT1_34 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[5]),
	.cout(),
	.cout0(\eventcounter[5]~13 ),
	.cout1(\eventcounter[5]~13COUT1_35 ));
// synopsys translate_off
defparam \eventcounter[5] .cin0_used = "true";
defparam \eventcounter[5] .cin1_used = "true";
defparam \eventcounter[5] .cin_used = "true";
defparam \eventcounter[5] .lut_mask = "c30c";
defparam \eventcounter[5] .operation_mode = "arithmetic";
defparam \eventcounter[5] .output_mode = "reg_only";
defparam \eventcounter[5] .register_cascade_mode = "off";
defparam \eventcounter[5] .sum_lutc_input = "cin";
defparam \eventcounter[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N6
maxii_lcell syn1siggate(
// Equation(s):
// \syn1siggate~regout  = DFFEAS(VCC, GLOBAL(\sigclk~combout ), GLOBAL(\ss~combout ), , , , , , )

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\ss~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\syn1siggate~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam syn1siggate.lut_mask = "ffff";
defparam syn1siggate.operation_mode = "normal";
defparam syn1siggate.output_mode = "reg_only";
defparam syn1siggate.register_cascade_mode = "off";
defparam syn1siggate.sum_lutc_input = "datac";
defparam syn1siggate.synch_mode = "off";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \refclk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\refclk~combout ),
	.padio(refclk));
// synopsys translate_off
defparam \refclk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y2_N3
maxii_lcell \LessThan0~30 (
// Equation(s):
// \LessThan0~30_combout  = ((!\ledblink:count[22]~regout  & ((mux[1]) # (!mux[0]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(mux[0]),
	.datac(mux[1]),
	.datad(\ledblink:count[22]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~30_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~30 .lut_mask = "00f3";
defparam \LessThan0~30 .operation_mode = "normal";
defparam \LessThan0~30 .output_mode = "comb_only";
defparam \LessThan0~30 .register_cascade_mode = "off";
defparam \LessThan0~30 .sum_lutc_input = "datac";
defparam \LessThan0~30 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N5
maxii_lcell \ledblink:count[0] (
// Equation(s):
// \ledblink:count[0]~regout  = DFFEAS((!\ledblink:count[0]~regout ), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[0]~1  = CARRY((\ledblink:count[0]~regout ))
// \ledblink:count[0]~1COUT1_3  = CARRY((\ledblink:count[0]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[0]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[0]~regout ),
	.cout(),
	.cout0(\ledblink:count[0]~1 ),
	.cout1(\ledblink:count[0]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[0] .lut_mask = "55aa";
defparam \ledblink:count[0] .operation_mode = "arithmetic";
defparam \ledblink:count[0] .output_mode = "reg_only";
defparam \ledblink:count[0] .register_cascade_mode = "off";
defparam \ledblink:count[0] .sum_lutc_input = "datac";
defparam \ledblink:count[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N6
maxii_lcell \ledblink:count[1] (
// Equation(s):
// \ledblink:count[1]~regout  = DFFEAS(\ledblink:count[1]~regout  $ ((((\ledblink:count[0]~1 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[1]~1  = CARRY(((!\ledblink:count[0]~1 )) # (!\ledblink:count[1]~regout ))
// \ledblink:count[1]~1COUT1_3  = CARRY(((!\ledblink:count[0]~1COUT1_3 )) # (!\ledblink:count[1]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[1]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\ledblink:count[0]~1 ),
	.cin1(\ledblink:count[0]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[1]~regout ),
	.cout(),
	.cout0(\ledblink:count[1]~1 ),
	.cout1(\ledblink:count[1]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[1] .cin0_used = "true";
defparam \ledblink:count[1] .cin1_used = "true";
defparam \ledblink:count[1] .lut_mask = "5a5f";
defparam \ledblink:count[1] .operation_mode = "arithmetic";
defparam \ledblink:count[1] .output_mode = "reg_only";
defparam \ledblink:count[1] .register_cascade_mode = "off";
defparam \ledblink:count[1] .sum_lutc_input = "cin";
defparam \ledblink:count[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N7
maxii_lcell \ledblink:count[2] (
// Equation(s):
// \ledblink:count[2]~regout  = DFFEAS(\ledblink:count[2]~regout  $ ((((!\ledblink:count[1]~1 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[2]~1  = CARRY((\ledblink:count[2]~regout  & ((!\ledblink:count[1]~1 ))))
// \ledblink:count[2]~1COUT1_3  = CARRY((\ledblink:count[2]~regout  & ((!\ledblink:count[1]~1COUT1_3 ))))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[2]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\ledblink:count[1]~1 ),
	.cin1(\ledblink:count[1]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[2]~regout ),
	.cout(),
	.cout0(\ledblink:count[2]~1 ),
	.cout1(\ledblink:count[2]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[2] .cin0_used = "true";
defparam \ledblink:count[2] .cin1_used = "true";
defparam \ledblink:count[2] .lut_mask = "a50a";
defparam \ledblink:count[2] .operation_mode = "arithmetic";
defparam \ledblink:count[2] .output_mode = "reg_only";
defparam \ledblink:count[2] .register_cascade_mode = "off";
defparam \ledblink:count[2] .sum_lutc_input = "cin";
defparam \ledblink:count[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N8
maxii_lcell \ledblink:count[3] (
// Equation(s):
// \ledblink:count[3]~regout  = DFFEAS(\ledblink:count[3]~regout  $ ((((\ledblink:count[2]~1 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[3]~1  = CARRY(((!\ledblink:count[2]~1 )) # (!\ledblink:count[3]~regout ))
// \ledblink:count[3]~1COUT1_3  = CARRY(((!\ledblink:count[2]~1COUT1_3 )) # (!\ledblink:count[3]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[3]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\ledblink:count[2]~1 ),
	.cin1(\ledblink:count[2]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[3]~regout ),
	.cout(),
	.cout0(\ledblink:count[3]~1 ),
	.cout1(\ledblink:count[3]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[3] .cin0_used = "true";
defparam \ledblink:count[3] .cin1_used = "true";
defparam \ledblink:count[3] .lut_mask = "5a5f";
defparam \ledblink:count[3] .operation_mode = "arithmetic";
defparam \ledblink:count[3] .output_mode = "reg_only";
defparam \ledblink:count[3] .register_cascade_mode = "off";
defparam \ledblink:count[3] .sum_lutc_input = "cin";
defparam \ledblink:count[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N9
maxii_lcell \ledblink:count[4] (
// Equation(s):
// \ledblink:count[4]~regout  = DFFEAS((\ledblink:count[4]~regout  $ ((!\ledblink:count[3]~1 ))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[4]~1  = CARRY(((\ledblink:count[4]~regout  & !\ledblink:count[3]~1COUT1_3 )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[4]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\ledblink:count[3]~1 ),
	.cin1(\ledblink:count[3]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[4]~regout ),
	.cout(\ledblink:count[4]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ledblink:count[4] .cin0_used = "true";
defparam \ledblink:count[4] .cin1_used = "true";
defparam \ledblink:count[4] .lut_mask = "c30c";
defparam \ledblink:count[4] .operation_mode = "arithmetic";
defparam \ledblink:count[4] .output_mode = "reg_only";
defparam \ledblink:count[4] .register_cascade_mode = "off";
defparam \ledblink:count[4] .sum_lutc_input = "cin";
defparam \ledblink:count[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N0
maxii_lcell \ledblink:count[5] (
// Equation(s):
// \ledblink:count[5]~regout  = DFFEAS((\ledblink:count[5]~regout  $ ((\ledblink:count[4]~1 ))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[5]~1  = CARRY(((!\ledblink:count[4]~1 ) # (!\ledblink:count[5]~regout )))
// \ledblink:count[5]~1COUT1_3  = CARRY(((!\ledblink:count[4]~1 ) # (!\ledblink:count[5]~regout )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[5]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[4]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[5]~regout ),
	.cout(),
	.cout0(\ledblink:count[5]~1 ),
	.cout1(\ledblink:count[5]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[5] .cin_used = "true";
defparam \ledblink:count[5] .lut_mask = "3c3f";
defparam \ledblink:count[5] .operation_mode = "arithmetic";
defparam \ledblink:count[5] .output_mode = "reg_only";
defparam \ledblink:count[5] .register_cascade_mode = "off";
defparam \ledblink:count[5] .sum_lutc_input = "cin";
defparam \ledblink:count[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N1
maxii_lcell \ledblink:count[6] (
// Equation(s):
// \ledblink:count[6]~regout  = DFFEAS((\ledblink:count[6]~regout  $ ((!(!\ledblink:count[4]~1  & \ledblink:count[5]~1 ) # (\ledblink:count[4]~1  & \ledblink:count[5]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[6]~1  = CARRY(((\ledblink:count[6]~regout  & !\ledblink:count[5]~1 )))
// \ledblink:count[6]~1COUT1_3  = CARRY(((\ledblink:count[6]~regout  & !\ledblink:count[5]~1COUT1_3 )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[6]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[4]~1 ),
	.cin0(\ledblink:count[5]~1 ),
	.cin1(\ledblink:count[5]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[6]~regout ),
	.cout(),
	.cout0(\ledblink:count[6]~1 ),
	.cout1(\ledblink:count[6]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[6] .cin0_used = "true";
defparam \ledblink:count[6] .cin1_used = "true";
defparam \ledblink:count[6] .cin_used = "true";
defparam \ledblink:count[6] .lut_mask = "c30c";
defparam \ledblink:count[6] .operation_mode = "arithmetic";
defparam \ledblink:count[6] .output_mode = "reg_only";
defparam \ledblink:count[6] .register_cascade_mode = "off";
defparam \ledblink:count[6] .sum_lutc_input = "cin";
defparam \ledblink:count[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N2
maxii_lcell \ledblink:count[7] (
// Equation(s):
// \ledblink:count[7]~regout  = DFFEAS((\ledblink:count[7]~regout  $ (((!\ledblink:count[4]~1  & \ledblink:count[6]~1 ) # (\ledblink:count[4]~1  & \ledblink:count[6]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[7]~1  = CARRY(((!\ledblink:count[6]~1 ) # (!\ledblink:count[7]~regout )))
// \ledblink:count[7]~1COUT1_3  = CARRY(((!\ledblink:count[6]~1COUT1_3 ) # (!\ledblink:count[7]~regout )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[7]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[4]~1 ),
	.cin0(\ledblink:count[6]~1 ),
	.cin1(\ledblink:count[6]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[7]~regout ),
	.cout(),
	.cout0(\ledblink:count[7]~1 ),
	.cout1(\ledblink:count[7]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[7] .cin0_used = "true";
defparam \ledblink:count[7] .cin1_used = "true";
defparam \ledblink:count[7] .cin_used = "true";
defparam \ledblink:count[7] .lut_mask = "3c3f";
defparam \ledblink:count[7] .operation_mode = "arithmetic";
defparam \ledblink:count[7] .output_mode = "reg_only";
defparam \ledblink:count[7] .register_cascade_mode = "off";
defparam \ledblink:count[7] .sum_lutc_input = "cin";
defparam \ledblink:count[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N3
maxii_lcell \ledblink:count[8] (
// Equation(s):
// \ledblink:count[8]~regout  = DFFEAS(\ledblink:count[8]~regout  $ ((((!(!\ledblink:count[4]~1  & \ledblink:count[7]~1 ) # (\ledblink:count[4]~1  & \ledblink:count[7]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[8]~1  = CARRY((\ledblink:count[8]~regout  & ((!\ledblink:count[7]~1 ))))
// \ledblink:count[8]~1COUT1_3  = CARRY((\ledblink:count[8]~regout  & ((!\ledblink:count[7]~1COUT1_3 ))))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[8]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[4]~1 ),
	.cin0(\ledblink:count[7]~1 ),
	.cin1(\ledblink:count[7]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[8]~regout ),
	.cout(),
	.cout0(\ledblink:count[8]~1 ),
	.cout1(\ledblink:count[8]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[8] .cin0_used = "true";
defparam \ledblink:count[8] .cin1_used = "true";
defparam \ledblink:count[8] .cin_used = "true";
defparam \ledblink:count[8] .lut_mask = "a50a";
defparam \ledblink:count[8] .operation_mode = "arithmetic";
defparam \ledblink:count[8] .output_mode = "reg_only";
defparam \ledblink:count[8] .register_cascade_mode = "off";
defparam \ledblink:count[8] .sum_lutc_input = "cin";
defparam \ledblink:count[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N4
maxii_lcell \ledblink:count[9] (
// Equation(s):
// \ledblink:count[9]~regout  = DFFEAS(\ledblink:count[9]~regout  $ (((((!\ledblink:count[4]~1  & \ledblink:count[8]~1 ) # (\ledblink:count[4]~1  & \ledblink:count[8]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[9]~1  = CARRY(((!\ledblink:count[8]~1COUT1_3 )) # (!\ledblink:count[9]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[9]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[4]~1 ),
	.cin0(\ledblink:count[8]~1 ),
	.cin1(\ledblink:count[8]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[9]~regout ),
	.cout(\ledblink:count[9]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ledblink:count[9] .cin0_used = "true";
defparam \ledblink:count[9] .cin1_used = "true";
defparam \ledblink:count[9] .cin_used = "true";
defparam \ledblink:count[9] .lut_mask = "5a5f";
defparam \ledblink:count[9] .operation_mode = "arithmetic";
defparam \ledblink:count[9] .output_mode = "reg_only";
defparam \ledblink:count[9] .register_cascade_mode = "off";
defparam \ledblink:count[9] .sum_lutc_input = "cin";
defparam \ledblink:count[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N5
maxii_lcell \ledblink:count[10] (
// Equation(s):
// \ledblink:count[10]~regout  = DFFEAS(\ledblink:count[10]~regout  $ ((((!\ledblink:count[9]~1 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[10]~1  = CARRY((\ledblink:count[10]~regout  & ((!\ledblink:count[9]~1 ))))
// \ledblink:count[10]~1COUT1_3  = CARRY((\ledblink:count[10]~regout  & ((!\ledblink:count[9]~1 ))))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[10]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[9]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[10]~regout ),
	.cout(),
	.cout0(\ledblink:count[10]~1 ),
	.cout1(\ledblink:count[10]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[10] .cin_used = "true";
defparam \ledblink:count[10] .lut_mask = "a50a";
defparam \ledblink:count[10] .operation_mode = "arithmetic";
defparam \ledblink:count[10] .output_mode = "reg_only";
defparam \ledblink:count[10] .register_cascade_mode = "off";
defparam \ledblink:count[10] .sum_lutc_input = "cin";
defparam \ledblink:count[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N6
maxii_lcell \ledblink:count[11] (
// Equation(s):
// \ledblink:count[11]~regout  = DFFEAS(\ledblink:count[11]~regout  $ (((((!\ledblink:count[9]~1  & \ledblink:count[10]~1 ) # (\ledblink:count[9]~1  & \ledblink:count[10]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[11]~1  = CARRY(((!\ledblink:count[10]~1 )) # (!\ledblink:count[11]~regout ))
// \ledblink:count[11]~1COUT1_3  = CARRY(((!\ledblink:count[10]~1COUT1_3 )) # (!\ledblink:count[11]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[11]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[9]~1 ),
	.cin0(\ledblink:count[10]~1 ),
	.cin1(\ledblink:count[10]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[11]~regout ),
	.cout(),
	.cout0(\ledblink:count[11]~1 ),
	.cout1(\ledblink:count[11]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[11] .cin0_used = "true";
defparam \ledblink:count[11] .cin1_used = "true";
defparam \ledblink:count[11] .cin_used = "true";
defparam \ledblink:count[11] .lut_mask = "5a5f";
defparam \ledblink:count[11] .operation_mode = "arithmetic";
defparam \ledblink:count[11] .output_mode = "reg_only";
defparam \ledblink:count[11] .register_cascade_mode = "off";
defparam \ledblink:count[11] .sum_lutc_input = "cin";
defparam \ledblink:count[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N7
maxii_lcell \ledblink:count[12] (
// Equation(s):
// \ledblink:count[12]~regout  = DFFEAS((\ledblink:count[12]~regout  $ ((!(!\ledblink:count[9]~1  & \ledblink:count[11]~1 ) # (\ledblink:count[9]~1  & \ledblink:count[11]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[12]~1  = CARRY(((\ledblink:count[12]~regout  & !\ledblink:count[11]~1 )))
// \ledblink:count[12]~1COUT1_3  = CARRY(((\ledblink:count[12]~regout  & !\ledblink:count[11]~1COUT1_3 )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[12]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[9]~1 ),
	.cin0(\ledblink:count[11]~1 ),
	.cin1(\ledblink:count[11]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[12]~regout ),
	.cout(),
	.cout0(\ledblink:count[12]~1 ),
	.cout1(\ledblink:count[12]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[12] .cin0_used = "true";
defparam \ledblink:count[12] .cin1_used = "true";
defparam \ledblink:count[12] .cin_used = "true";
defparam \ledblink:count[12] .lut_mask = "c30c";
defparam \ledblink:count[12] .operation_mode = "arithmetic";
defparam \ledblink:count[12] .output_mode = "reg_only";
defparam \ledblink:count[12] .register_cascade_mode = "off";
defparam \ledblink:count[12] .sum_lutc_input = "cin";
defparam \ledblink:count[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N8
maxii_lcell \ledblink:count[13] (
// Equation(s):
// \ledblink:count[13]~regout  = DFFEAS(\ledblink:count[13]~regout  $ (((((!\ledblink:count[9]~1  & \ledblink:count[12]~1 ) # (\ledblink:count[9]~1  & \ledblink:count[12]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[13]~1  = CARRY(((!\ledblink:count[12]~1 )) # (!\ledblink:count[13]~regout ))
// \ledblink:count[13]~1COUT1_3  = CARRY(((!\ledblink:count[12]~1COUT1_3 )) # (!\ledblink:count[13]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[13]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[9]~1 ),
	.cin0(\ledblink:count[12]~1 ),
	.cin1(\ledblink:count[12]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[13]~regout ),
	.cout(),
	.cout0(\ledblink:count[13]~1 ),
	.cout1(\ledblink:count[13]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[13] .cin0_used = "true";
defparam \ledblink:count[13] .cin1_used = "true";
defparam \ledblink:count[13] .cin_used = "true";
defparam \ledblink:count[13] .lut_mask = "5a5f";
defparam \ledblink:count[13] .operation_mode = "arithmetic";
defparam \ledblink:count[13] .output_mode = "reg_only";
defparam \ledblink:count[13] .register_cascade_mode = "off";
defparam \ledblink:count[13] .sum_lutc_input = "cin";
defparam \ledblink:count[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N9
maxii_lcell \ledblink:count[14] (
// Equation(s):
// \ledblink:count[14]~regout  = DFFEAS((\ledblink:count[14]~regout  $ ((!(!\ledblink:count[9]~1  & \ledblink:count[13]~1 ) # (\ledblink:count[9]~1  & \ledblink:count[13]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[14]~1  = CARRY(((\ledblink:count[14]~regout  & !\ledblink:count[13]~1COUT1_3 )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[14]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[9]~1 ),
	.cin0(\ledblink:count[13]~1 ),
	.cin1(\ledblink:count[13]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[14]~regout ),
	.cout(\ledblink:count[14]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ledblink:count[14] .cin0_used = "true";
defparam \ledblink:count[14] .cin1_used = "true";
defparam \ledblink:count[14] .cin_used = "true";
defparam \ledblink:count[14] .lut_mask = "c30c";
defparam \ledblink:count[14] .operation_mode = "arithmetic";
defparam \ledblink:count[14] .output_mode = "reg_only";
defparam \ledblink:count[14] .register_cascade_mode = "off";
defparam \ledblink:count[14] .sum_lutc_input = "cin";
defparam \ledblink:count[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N0
maxii_lcell \ledblink:count[15] (
// Equation(s):
// \ledblink:count[15]~regout  = DFFEAS((\ledblink:count[15]~regout  $ ((\ledblink:count[14]~1 ))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[15]~1  = CARRY(((!\ledblink:count[14]~1 ) # (!\ledblink:count[15]~regout )))
// \ledblink:count[15]~1COUT1_3  = CARRY(((!\ledblink:count[14]~1 ) # (!\ledblink:count[15]~regout )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[15]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[14]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[15]~regout ),
	.cout(),
	.cout0(\ledblink:count[15]~1 ),
	.cout1(\ledblink:count[15]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[15] .cin_used = "true";
defparam \ledblink:count[15] .lut_mask = "3c3f";
defparam \ledblink:count[15] .operation_mode = "arithmetic";
defparam \ledblink:count[15] .output_mode = "reg_only";
defparam \ledblink:count[15] .register_cascade_mode = "off";
defparam \ledblink:count[15] .sum_lutc_input = "cin";
defparam \ledblink:count[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N1
maxii_lcell \ledblink:count[16] (
// Equation(s):
// \ledblink:count[16]~regout  = DFFEAS((\ledblink:count[16]~regout  $ ((!(!\ledblink:count[14]~1  & \ledblink:count[15]~1 ) # (\ledblink:count[14]~1  & \ledblink:count[15]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[16]~1  = CARRY(((\ledblink:count[16]~regout  & !\ledblink:count[15]~1 )))
// \ledblink:count[16]~1COUT1_3  = CARRY(((\ledblink:count[16]~regout  & !\ledblink:count[15]~1COUT1_3 )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[16]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[14]~1 ),
	.cin0(\ledblink:count[15]~1 ),
	.cin1(\ledblink:count[15]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[16]~regout ),
	.cout(),
	.cout0(\ledblink:count[16]~1 ),
	.cout1(\ledblink:count[16]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[16] .cin0_used = "true";
defparam \ledblink:count[16] .cin1_used = "true";
defparam \ledblink:count[16] .cin_used = "true";
defparam \ledblink:count[16] .lut_mask = "c30c";
defparam \ledblink:count[16] .operation_mode = "arithmetic";
defparam \ledblink:count[16] .output_mode = "reg_only";
defparam \ledblink:count[16] .register_cascade_mode = "off";
defparam \ledblink:count[16] .sum_lutc_input = "cin";
defparam \ledblink:count[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N2
maxii_lcell \ledblink:count[17] (
// Equation(s):
// \ledblink:count[17]~regout  = DFFEAS((\ledblink:count[17]~regout  $ (((!\ledblink:count[14]~1  & \ledblink:count[16]~1 ) # (\ledblink:count[14]~1  & \ledblink:count[16]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[17]~1  = CARRY(((!\ledblink:count[16]~1 ) # (!\ledblink:count[17]~regout )))
// \ledblink:count[17]~1COUT1_3  = CARRY(((!\ledblink:count[16]~1COUT1_3 ) # (!\ledblink:count[17]~regout )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[17]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[14]~1 ),
	.cin0(\ledblink:count[16]~1 ),
	.cin1(\ledblink:count[16]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[17]~regout ),
	.cout(),
	.cout0(\ledblink:count[17]~1 ),
	.cout1(\ledblink:count[17]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[17] .cin0_used = "true";
defparam \ledblink:count[17] .cin1_used = "true";
defparam \ledblink:count[17] .cin_used = "true";
defparam \ledblink:count[17] .lut_mask = "3c3f";
defparam \ledblink:count[17] .operation_mode = "arithmetic";
defparam \ledblink:count[17] .output_mode = "reg_only";
defparam \ledblink:count[17] .register_cascade_mode = "off";
defparam \ledblink:count[17] .sum_lutc_input = "cin";
defparam \ledblink:count[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N3
maxii_lcell \ledblink:count[18] (
// Equation(s):
// \ledblink:count[18]~regout  = DFFEAS(\ledblink:count[18]~regout  $ ((((!(!\ledblink:count[14]~1  & \ledblink:count[17]~1 ) # (\ledblink:count[14]~1  & \ledblink:count[17]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[18]~1  = CARRY((\ledblink:count[18]~regout  & ((!\ledblink:count[17]~1 ))))
// \ledblink:count[18]~1COUT1_3  = CARRY((\ledblink:count[18]~regout  & ((!\ledblink:count[17]~1COUT1_3 ))))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[18]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[14]~1 ),
	.cin0(\ledblink:count[17]~1 ),
	.cin1(\ledblink:count[17]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[18]~regout ),
	.cout(),
	.cout0(\ledblink:count[18]~1 ),
	.cout1(\ledblink:count[18]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[18] .cin0_used = "true";
defparam \ledblink:count[18] .cin1_used = "true";
defparam \ledblink:count[18] .cin_used = "true";
defparam \ledblink:count[18] .lut_mask = "a50a";
defparam \ledblink:count[18] .operation_mode = "arithmetic";
defparam \ledblink:count[18] .output_mode = "reg_only";
defparam \ledblink:count[18] .register_cascade_mode = "off";
defparam \ledblink:count[18] .sum_lutc_input = "cin";
defparam \ledblink:count[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N4
maxii_lcell \ledblink:count[19] (
// Equation(s):
// \ledblink:count[19]~regout  = DFFEAS(\ledblink:count[19]~regout  $ (((((!\ledblink:count[14]~1  & \ledblink:count[18]~1 ) # (\ledblink:count[14]~1  & \ledblink:count[18]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[19]~1  = CARRY(((!\ledblink:count[18]~1COUT1_3 )) # (!\ledblink:count[19]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[19]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[14]~1 ),
	.cin0(\ledblink:count[18]~1 ),
	.cin1(\ledblink:count[18]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[19]~regout ),
	.cout(\ledblink:count[19]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ledblink:count[19] .cin0_used = "true";
defparam \ledblink:count[19] .cin1_used = "true";
defparam \ledblink:count[19] .cin_used = "true";
defparam \ledblink:count[19] .lut_mask = "5a5f";
defparam \ledblink:count[19] .operation_mode = "arithmetic";
defparam \ledblink:count[19] .output_mode = "reg_only";
defparam \ledblink:count[19] .register_cascade_mode = "off";
defparam \ledblink:count[19] .sum_lutc_input = "cin";
defparam \ledblink:count[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N5
maxii_lcell \ledblink:count[20] (
// Equation(s):
// \ledblink:count[20]~regout  = DFFEAS(\ledblink:count[20]~regout  $ ((((!\ledblink:count[19]~1 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[20]~1  = CARRY((\ledblink:count[20]~regout  & ((!\ledblink:count[19]~1 ))))
// \ledblink:count[20]~1COUT1_3  = CARRY((\ledblink:count[20]~regout  & ((!\ledblink:count[19]~1 ))))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[20]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[19]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[20]~regout ),
	.cout(),
	.cout0(\ledblink:count[20]~1 ),
	.cout1(\ledblink:count[20]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[20] .cin_used = "true";
defparam \ledblink:count[20] .lut_mask = "a50a";
defparam \ledblink:count[20] .operation_mode = "arithmetic";
defparam \ledblink:count[20] .output_mode = "reg_only";
defparam \ledblink:count[20] .register_cascade_mode = "off";
defparam \ledblink:count[20] .sum_lutc_input = "cin";
defparam \ledblink:count[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N6
maxii_lcell \ledblink:count[21] (
// Equation(s):
// \ledblink:count[21]~regout  = DFFEAS(\ledblink:count[21]~regout  $ (((((!\ledblink:count[19]~1  & \ledblink:count[20]~1 ) # (\ledblink:count[19]~1  & \ledblink:count[20]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[21]~1  = CARRY(((!\ledblink:count[20]~1 )) # (!\ledblink:count[21]~regout ))
// \ledblink:count[21]~1COUT1_3  = CARRY(((!\ledblink:count[20]~1COUT1_3 )) # (!\ledblink:count[21]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[21]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[19]~1 ),
	.cin0(\ledblink:count[20]~1 ),
	.cin1(\ledblink:count[20]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[21]~regout ),
	.cout(),
	.cout0(\ledblink:count[21]~1 ),
	.cout1(\ledblink:count[21]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[21] .cin0_used = "true";
defparam \ledblink:count[21] .cin1_used = "true";
defparam \ledblink:count[21] .cin_used = "true";
defparam \ledblink:count[21] .lut_mask = "5a5f";
defparam \ledblink:count[21] .operation_mode = "arithmetic";
defparam \ledblink:count[21] .output_mode = "reg_only";
defparam \ledblink:count[21] .register_cascade_mode = "off";
defparam \ledblink:count[21] .sum_lutc_input = "cin";
defparam \ledblink:count[21] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N7
maxii_lcell \ledblink:count[22] (
// Equation(s):
// \ledblink:count[22]~regout  = DFFEAS((\ledblink:count[22]~regout  $ ((!(!\ledblink:count[19]~1  & \ledblink:count[21]~1 ) # (\ledblink:count[19]~1  & \ledblink:count[21]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[22]~1  = CARRY(((\ledblink:count[22]~regout  & !\ledblink:count[21]~1 )))
// \ledblink:count[22]~1COUT1_3  = CARRY(((\ledblink:count[22]~regout  & !\ledblink:count[21]~1COUT1_3 )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[22]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[19]~1 ),
	.cin0(\ledblink:count[21]~1 ),
	.cin1(\ledblink:count[21]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[22]~regout ),
	.cout(),
	.cout0(\ledblink:count[22]~1 ),
	.cout1(\ledblink:count[22]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[22] .cin0_used = "true";
defparam \ledblink:count[22] .cin1_used = "true";
defparam \ledblink:count[22] .cin_used = "true";
defparam \ledblink:count[22] .lut_mask = "c30c";
defparam \ledblink:count[22] .operation_mode = "arithmetic";
defparam \ledblink:count[22] .output_mode = "reg_only";
defparam \ledblink:count[22] .register_cascade_mode = "off";
defparam \ledblink:count[22] .sum_lutc_input = "cin";
defparam \ledblink:count[22] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N8
maxii_lcell \ledblink:count[23] (
// Equation(s):
// \ledblink:count[23]~regout  = DFFEAS(\ledblink:count[23]~regout  $ (((((!\ledblink:count[19]~1  & \ledblink:count[22]~1 ) # (\ledblink:count[19]~1  & \ledblink:count[22]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[23]~1  = CARRY(((!\ledblink:count[22]~1 )) # (!\ledblink:count[23]~regout ))
// \ledblink:count[23]~1COUT1_3  = CARRY(((!\ledblink:count[22]~1COUT1_3 )) # (!\ledblink:count[23]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[23]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[19]~1 ),
	.cin0(\ledblink:count[22]~1 ),
	.cin1(\ledblink:count[22]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[23]~regout ),
	.cout(),
	.cout0(\ledblink:count[23]~1 ),
	.cout1(\ledblink:count[23]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[23] .cin0_used = "true";
defparam \ledblink:count[23] .cin1_used = "true";
defparam \ledblink:count[23] .cin_used = "true";
defparam \ledblink:count[23] .lut_mask = "5a5f";
defparam \ledblink:count[23] .operation_mode = "arithmetic";
defparam \ledblink:count[23] .output_mode = "reg_only";
defparam \ledblink:count[23] .register_cascade_mode = "off";
defparam \ledblink:count[23] .sum_lutc_input = "cin";
defparam \ledblink:count[23] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N9
maxii_lcell \ledblink:count[24] (
// Equation(s):
// \ledblink:count[24]~regout  = DFFEAS((\ledblink:count[24]~regout  $ ((!(!\ledblink:count[19]~1  & \ledblink:count[23]~1 ) # (\ledblink:count[19]~1  & \ledblink:count[23]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[24]~1  = CARRY(((\ledblink:count[24]~regout  & !\ledblink:count[23]~1COUT1_3 )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[24]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[19]~1 ),
	.cin0(\ledblink:count[23]~1 ),
	.cin1(\ledblink:count[23]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[24]~regout ),
	.cout(\ledblink:count[24]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ledblink:count[24] .cin0_used = "true";
defparam \ledblink:count[24] .cin1_used = "true";
defparam \ledblink:count[24] .cin_used = "true";
defparam \ledblink:count[24] .lut_mask = "c30c";
defparam \ledblink:count[24] .operation_mode = "arithmetic";
defparam \ledblink:count[24] .output_mode = "reg_only";
defparam \ledblink:count[24] .register_cascade_mode = "off";
defparam \ledblink:count[24] .sum_lutc_input = "cin";
defparam \ledblink:count[24] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N0
maxii_lcell \ledblink:count[25] (
// Equation(s):
// \ledblink:count[25]~regout  = DFFEAS((\ledblink:count[25]~regout  $ ((\ledblink:count[24]~1 ))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[25]~1  = CARRY(((!\ledblink:count[24]~1 ) # (!\ledblink:count[25]~regout )))
// \ledblink:count[25]~1COUT1_3  = CARRY(((!\ledblink:count[24]~1 ) # (!\ledblink:count[25]~regout )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[25]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[24]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[25]~regout ),
	.cout(),
	.cout0(\ledblink:count[25]~1 ),
	.cout1(\ledblink:count[25]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[25] .cin_used = "true";
defparam \ledblink:count[25] .lut_mask = "3c3f";
defparam \ledblink:count[25] .operation_mode = "arithmetic";
defparam \ledblink:count[25] .output_mode = "reg_only";
defparam \ledblink:count[25] .register_cascade_mode = "off";
defparam \ledblink:count[25] .sum_lutc_input = "cin";
defparam \ledblink:count[25] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N1
maxii_lcell \ledblink:count[26] (
// Equation(s):
// \ledblink:count[26]~regout  = DFFEAS((\ledblink:count[26]~regout  $ ((!(!\ledblink:count[24]~1  & \ledblink:count[25]~1 ) # (\ledblink:count[24]~1  & \ledblink:count[25]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[26]~1  = CARRY(((\ledblink:count[26]~regout  & !\ledblink:count[25]~1 )))
// \ledblink:count[26]~1COUT1_3  = CARRY(((\ledblink:count[26]~regout  & !\ledblink:count[25]~1COUT1_3 )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[26]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[24]~1 ),
	.cin0(\ledblink:count[25]~1 ),
	.cin1(\ledblink:count[25]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[26]~regout ),
	.cout(),
	.cout0(\ledblink:count[26]~1 ),
	.cout1(\ledblink:count[26]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[26] .cin0_used = "true";
defparam \ledblink:count[26] .cin1_used = "true";
defparam \ledblink:count[26] .cin_used = "true";
defparam \ledblink:count[26] .lut_mask = "c30c";
defparam \ledblink:count[26] .operation_mode = "arithmetic";
defparam \ledblink:count[26] .output_mode = "reg_only";
defparam \ledblink:count[26] .register_cascade_mode = "off";
defparam \ledblink:count[26] .sum_lutc_input = "cin";
defparam \ledblink:count[26] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y2_N0
maxii_lcell \LessThan0~8 (
// Equation(s):
// \LessThan0~8_combout  = (!\ledblink:count[26]~regout  & (\ledblink:count[25]~regout  $ (((mux[1]) # (mux[0])))))

	.clk(gnd),
	.dataa(\ledblink:count[25]~regout ),
	.datab(\ledblink:count[26]~regout ),
	.datac(mux[1]),
	.datad(mux[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~8 .lut_mask = "1112";
defparam \LessThan0~8 .operation_mode = "normal";
defparam \LessThan0~8 .output_mode = "comb_only";
defparam \LessThan0~8 .register_cascade_mode = "off";
defparam \LessThan0~8 .sum_lutc_input = "datac";
defparam \LessThan0~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N9
maxii_lcell \LessThan0~27 (
// Equation(s):
// \LessThan0~27_combout  = (!mux[0] & (!\ledblink:count[24]~regout  & (mux[1] & \LessThan0~8_combout )))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(\ledblink:count[24]~regout ),
	.datac(mux[1]),
	.datad(\LessThan0~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~27_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~27 .lut_mask = "1000";
defparam \LessThan0~27 .operation_mode = "normal";
defparam \LessThan0~27 .output_mode = "comb_only";
defparam \LessThan0~27 .register_cascade_mode = "off";
defparam \LessThan0~27 .sum_lutc_input = "datac";
defparam \LessThan0~27 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N1
maxii_lcell \LessThan0~9 (
// Equation(s):
// \LessThan0~9_combout  = (\LessThan0~8_combout  & (\ledblink:count[24]~regout  $ (((mux[0]) # (!mux[1])))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(\ledblink:count[24]~regout ),
	.datac(mux[1]),
	.datad(\LessThan0~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~9 .lut_mask = "6300";
defparam \LessThan0~9 .operation_mode = "normal";
defparam \LessThan0~9 .output_mode = "comb_only";
defparam \LessThan0~9 .register_cascade_mode = "off";
defparam \LessThan0~9 .sum_lutc_input = "datac";
defparam \LessThan0~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N6
maxii_lcell \LessThan0~10 (
// Equation(s):
// \LessThan0~10_combout  = ((\LessThan0~9_combout  & (\ledblink:count[23]~regout  $ (mux[1]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\ledblink:count[23]~regout ),
	.datac(mux[1]),
	.datad(\LessThan0~9_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~10 .lut_mask = "3c00";
defparam \LessThan0~10 .operation_mode = "normal";
defparam \LessThan0~10 .output_mode = "comb_only";
defparam \LessThan0~10 .register_cascade_mode = "off";
defparam \LessThan0~10 .sum_lutc_input = "datac";
defparam \LessThan0~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N4
maxii_lcell \LessThan0~28 (
// Equation(s):
// \LessThan0~28_combout  = (!\ledblink:count[25]~regout  & (!mux[1] & (!mux[0] & !\ledblink:count[26]~regout )))

	.clk(gnd),
	.dataa(\ledblink:count[25]~regout ),
	.datab(mux[1]),
	.datac(mux[0]),
	.datad(\ledblink:count[26]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~28_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~28 .lut_mask = "0001";
defparam \LessThan0~28 .operation_mode = "normal";
defparam \LessThan0~28 .output_mode = "comb_only";
defparam \LessThan0~28 .register_cascade_mode = "off";
defparam \LessThan0~28 .sum_lutc_input = "datac";
defparam \LessThan0~28 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N8
maxii_lcell \LessThan0~29 (
// Equation(s):
// \LessThan0~29_combout  = (\LessThan0~28_combout ) # ((!\ledblink:count[23]~regout  & (!mux[1] & \LessThan0~9_combout )))

	.clk(gnd),
	.dataa(\ledblink:count[23]~regout ),
	.datab(mux[1]),
	.datac(\LessThan0~28_combout ),
	.datad(\LessThan0~9_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~29_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~29 .lut_mask = "f1f0";
defparam \LessThan0~29 .operation_mode = "normal";
defparam \LessThan0~29 .output_mode = "comb_only";
defparam \LessThan0~29 .register_cascade_mode = "off";
defparam \LessThan0~29 .sum_lutc_input = "datac";
defparam \LessThan0~29 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N5
maxii_lcell \LessThan0~31 (
// Equation(s):
// \LessThan0~31_combout  = (\LessThan0~27_combout ) # ((\LessThan0~29_combout ) # ((\LessThan0~30_combout  & \LessThan0~10_combout )))

	.clk(gnd),
	.dataa(\LessThan0~30_combout ),
	.datab(\LessThan0~27_combout ),
	.datac(\LessThan0~10_combout ),
	.datad(\LessThan0~29_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~31_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~31 .lut_mask = "ffec";
defparam \LessThan0~31 .operation_mode = "normal";
defparam \LessThan0~31 .output_mode = "comb_only";
defparam \LessThan0~31 .register_cascade_mode = "off";
defparam \LessThan0~31 .sum_lutc_input = "datac";
defparam \LessThan0~31 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N2
maxii_lcell \ledblink:count[27] (
// Equation(s):
// \ledblink:count[27]~regout  = DFFEAS((\ledblink:count[27]~regout  $ (((!\ledblink:count[24]~1  & \ledblink:count[26]~1 ) # (\ledblink:count[24]~1  & \ledblink:count[26]~1COUT1_3 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[27]~1  = CARRY(((!\ledblink:count[26]~1 ) # (!\ledblink:count[27]~regout )))
// \ledblink:count[27]~1COUT1_3  = CARRY(((!\ledblink:count[26]~1COUT1_3 ) # (!\ledblink:count[27]~regout )))

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\ledblink:count[27]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[24]~1 ),
	.cin0(\ledblink:count[26]~1 ),
	.cin1(\ledblink:count[26]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[27]~regout ),
	.cout(),
	.cout0(\ledblink:count[27]~1 ),
	.cout1(\ledblink:count[27]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[27] .cin0_used = "true";
defparam \ledblink:count[27] .cin1_used = "true";
defparam \ledblink:count[27] .cin_used = "true";
defparam \ledblink:count[27] .lut_mask = "3c3f";
defparam \ledblink:count[27] .operation_mode = "arithmetic";
defparam \ledblink:count[27] .output_mode = "reg_only";
defparam \ledblink:count[27] .register_cascade_mode = "off";
defparam \ledblink:count[27] .sum_lutc_input = "cin";
defparam \ledblink:count[27] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N3
maxii_lcell \ledblink:count[28] (
// Equation(s):
// \ledblink:count[28]~regout  = DFFEAS(\ledblink:count[28]~regout  $ ((((!(!\ledblink:count[24]~1  & \ledblink:count[27]~1 ) # (\ledblink:count[24]~1  & \ledblink:count[27]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[28]~1  = CARRY((\ledblink:count[28]~regout  & ((!\ledblink:count[27]~1 ))))
// \ledblink:count[28]~1COUT1_3  = CARRY((\ledblink:count[28]~regout  & ((!\ledblink:count[27]~1COUT1_3 ))))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[28]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[24]~1 ),
	.cin0(\ledblink:count[27]~1 ),
	.cin1(\ledblink:count[27]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[28]~regout ),
	.cout(),
	.cout0(\ledblink:count[28]~1 ),
	.cout1(\ledblink:count[28]~1COUT1_3 ));
// synopsys translate_off
defparam \ledblink:count[28] .cin0_used = "true";
defparam \ledblink:count[28] .cin1_used = "true";
defparam \ledblink:count[28] .cin_used = "true";
defparam \ledblink:count[28] .lut_mask = "a50a";
defparam \ledblink:count[28] .operation_mode = "arithmetic";
defparam \ledblink:count[28] .output_mode = "reg_only";
defparam \ledblink:count[28] .register_cascade_mode = "off";
defparam \ledblink:count[28] .sum_lutc_input = "cin";
defparam \ledblink:count[28] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N4
maxii_lcell \ledblink:count[29] (
// Equation(s):
// \ledblink:count[29]~regout  = DFFEAS(\ledblink:count[29]~regout  $ (((((!\ledblink:count[24]~1  & \ledblink:count[28]~1 ) # (\ledblink:count[24]~1  & \ledblink:count[28]~1COUT1_3 ))))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )
// \ledblink:count[29]~1  = CARRY(((!\ledblink:count[28]~1COUT1_3 )) # (!\ledblink:count[29]~regout ))

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[29]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[24]~1 ),
	.cin0(\ledblink:count[28]~1 ),
	.cin1(\ledblink:count[28]~1COUT1_3 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[29]~regout ),
	.cout(\ledblink:count[29]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ledblink:count[29] .cin0_used = "true";
defparam \ledblink:count[29] .cin1_used = "true";
defparam \ledblink:count[29] .cin_used = "true";
defparam \ledblink:count[29] .lut_mask = "5a5f";
defparam \ledblink:count[29] .operation_mode = "arithmetic";
defparam \ledblink:count[29] .output_mode = "reg_only";
defparam \ledblink:count[29] .register_cascade_mode = "off";
defparam \ledblink:count[29] .sum_lutc_input = "cin";
defparam \ledblink:count[29] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N5
maxii_lcell \ledblink:count[30] (
// Equation(s):
// \ledblink:count[30]~regout  = DFFEAS(\ledblink:count[30]~regout  $ ((((!\ledblink:count[29]~1 )))), GLOBAL(\refclk~combout ), VCC, , , , , \count~1_combout , )

	.clk(\refclk~combout ),
	.dataa(\ledblink:count[30]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\count~1_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\ledblink:count[29]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ledblink:count[30]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ledblink:count[30] .cin_used = "true";
defparam \ledblink:count[30] .lut_mask = "a5a5";
defparam \ledblink:count[30] .operation_mode = "normal";
defparam \ledblink:count[30] .output_mode = "reg_only";
defparam \ledblink:count[30] .register_cascade_mode = "off";
defparam \ledblink:count[30] .sum_lutc_input = "cin";
defparam \ledblink:count[30] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N6
maxii_lcell \count~0 (
// Equation(s):
// \count~0_combout  = (!\ledblink:count[30]~regout  & (!\ledblink:count[27]~regout  & (!\ledblink:count[29]~regout  & !\ledblink:count[28]~regout )))

	.clk(gnd),
	.dataa(\ledblink:count[30]~regout ),
	.datab(\ledblink:count[27]~regout ),
	.datac(\ledblink:count[29]~regout ),
	.datad(\ledblink:count[28]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\count~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count~0 .lut_mask = "0001";
defparam \count~0 .operation_mode = "normal";
defparam \count~0 .output_mode = "comb_only";
defparam \count~0 .register_cascade_mode = "off";
defparam \count~0 .sum_lutc_input = "datac";
defparam \count~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N2
maxii_lcell \LessThan1~10 (
// Equation(s):
// \LessThan1~10_combout  = (!\ledblink:count[26]~regout  & (!mux[0] & ((!\ledblink:count[25]~regout ) # (!mux[1]))))

	.clk(gnd),
	.dataa(\ledblink:count[26]~regout ),
	.datab(mux[0]),
	.datac(mux[1]),
	.datad(\ledblink:count[25]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~10 .lut_mask = "0111";
defparam \LessThan1~10 .operation_mode = "normal";
defparam \LessThan1~10 .output_mode = "comb_only";
defparam \LessThan1~10 .register_cascade_mode = "off";
defparam \LessThan1~10 .sum_lutc_input = "datac";
defparam \LessThan1~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N3
maxii_lcell \LessThan1~11 (
// Equation(s):
// \LessThan1~11_combout  = (mux[1] & (!\ledblink:count[26]~regout  & (mux[0] $ (\ledblink:count[25]~regout )))) # (!mux[1] & (!\ledblink:count[25]~regout  & (mux[0] $ (\ledblink:count[26]~regout ))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(\ledblink:count[26]~regout ),
	.datac(\ledblink:count[25]~regout ),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~11 .lut_mask = "1206";
defparam \LessThan1~11 .operation_mode = "normal";
defparam \LessThan1~11 .output_mode = "comb_only";
defparam \LessThan1~11 .register_cascade_mode = "off";
defparam \LessThan1~11 .sum_lutc_input = "datac";
defparam \LessThan1~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N8
maxii_lcell \LessThan1~12 (
// Equation(s):
// \LessThan1~12_combout  = ((!\ledblink:count[23]~regout  & ((mux[1]) # (!mux[0]))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(mux[1]),
	.datac(vcc),
	.datad(\ledblink:count[23]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~12 .lut_mask = "00dd";
defparam \LessThan1~12 .operation_mode = "normal";
defparam \LessThan1~12 .output_mode = "comb_only";
defparam \LessThan1~12 .register_cascade_mode = "off";
defparam \LessThan1~12 .sum_lutc_input = "datac";
defparam \LessThan1~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N6
maxii_lcell \LessThan1~13 (
// Equation(s):
// \LessThan1~13_combout  = (\LessThan1~11_combout  & ((mux[1] & (!\ledblink:count[24]~regout  & \LessThan1~12_combout )) # (!mux[1] & ((\LessThan1~12_combout ) # (!\ledblink:count[24]~regout )))))

	.clk(gnd),
	.dataa(mux[1]),
	.datab(\ledblink:count[24]~regout ),
	.datac(\LessThan1~11_combout ),
	.datad(\LessThan1~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~13 .lut_mask = "7010";
defparam \LessThan1~13 .operation_mode = "normal";
defparam \LessThan1~13 .output_mode = "comb_only";
defparam \LessThan1~13 .register_cascade_mode = "off";
defparam \LessThan1~13 .sum_lutc_input = "datac";
defparam \LessThan1~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N6
maxii_lcell \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (((mux[0] & !mux[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(mux[0]),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = "00f0";
defparam \Equal0~0 .operation_mode = "normal";
defparam \Equal0~0 .output_mode = "comb_only";
defparam \Equal0~0 .register_cascade_mode = "off";
defparam \Equal0~0 .sum_lutc_input = "datac";
defparam \Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N4
maxii_lcell \LessThan1~29 (
// Equation(s):
// \LessThan1~29_combout  = ((\ledblink:count[24]~regout  $ (mux[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\ledblink:count[24]~regout ),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~29_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~29 .lut_mask = "0ff0";
defparam \LessThan1~29 .operation_mode = "normal";
defparam \LessThan1~29 .output_mode = "comb_only";
defparam \LessThan1~29 .register_cascade_mode = "off";
defparam \LessThan1~29 .sum_lutc_input = "datac";
defparam \LessThan1~29 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N1
maxii_lcell \LessThan1~30 (
// Equation(s):
// \LessThan1~30_combout  = (\LessThan1~11_combout  & (\LessThan1~29_combout  & (\ledblink:count[23]~regout  $ (\Equal0~0_combout ))))

	.clk(gnd),
	.dataa(\ledblink:count[23]~regout ),
	.datab(\Equal0~0_combout ),
	.datac(\LessThan1~11_combout ),
	.datad(\LessThan1~29_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~30_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~30 .lut_mask = "6000";
defparam \LessThan1~30 .operation_mode = "normal";
defparam \LessThan1~30 .output_mode = "comb_only";
defparam \LessThan1~30 .register_cascade_mode = "off";
defparam \LessThan1~30 .sum_lutc_input = "datac";
defparam \LessThan1~30 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_92,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \mosi~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\mosi~combout ),
	.padio(mosi));
// synopsys translate_off
defparam \mosi~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_95,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \modeshift~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\modeshift~combout ),
	.padio(modeshift));
// synopsys translate_off
defparam \modeshift~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X4_Y2_N0
maxii_lcell \mux[0] (
// Equation(s):
// \LessThan1~15  = (mux[0] & (\ledblink:count[21]~regout  & (mux[1] $ (\ledblink:count[22]~regout )))) # (!mux[0] & (\ledblink:count[22]~regout  & (mux[1] $ (\ledblink:count[21]~regout ))))
// mux[0] = DFFEAS(\LessThan1~15 , !GLOBAL(\sck~combout ), VCC, , \modeshift~combout , \mosi~combout , , , VCC)

	.clk(!\sck~combout ),
	.dataa(mux[1]),
	.datab(\ledblink:count[22]~regout ),
	.datac(\mosi~combout ),
	.datad(\ledblink:count[21]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\modeshift~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~15 ),
	.regout(mux[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mux[0] .lut_mask = "6408";
defparam \mux[0] .operation_mode = "normal";
defparam \mux[0] .output_mode = "reg_and_comb";
defparam \mux[0] .register_cascade_mode = "off";
defparam \mux[0] .sum_lutc_input = "qfbk";
defparam \mux[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N4
maxii_lcell \LessThan1~32 (
// Equation(s):
// \LessThan1~32_combout  = (\ledblink:count[16]~regout  & ((\ledblink:count[17]~regout ) # ((!mux[0])))) # (!\ledblink:count[16]~regout  & ((mux[1] & ((!mux[0]))) # (!mux[1] & (\ledblink:count[17]~regout ))))

	.clk(gnd),
	.dataa(\ledblink:count[17]~regout ),
	.datab(\ledblink:count[16]~regout ),
	.datac(mux[0]),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~32_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~32 .lut_mask = "8fae";
defparam \LessThan1~32 .operation_mode = "normal";
defparam \LessThan1~32 .output_mode = "comb_only";
defparam \LessThan1~32 .register_cascade_mode = "off";
defparam \LessThan1~32 .sum_lutc_input = "datac";
defparam \LessThan1~32 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N5
maxii_lcell \LessThan1~34 (
// Equation(s):
// \LessThan1~34_combout  = (\ledblink:count[20]~regout  & ((\ledblink:count[19]~regout  & (!mux[0] & mux[1])) # (!\ledblink:count[19]~regout  & (mux[0] $ (!mux[1]))))) # (!\ledblink:count[20]~regout  & (\ledblink:count[19]~regout  & (mux[0] & !mux[1])))

	.clk(gnd),
	.dataa(\ledblink:count[20]~regout ),
	.datab(\ledblink:count[19]~regout ),
	.datac(mux[0]),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~34_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~34 .lut_mask = "2842";
defparam \LessThan1~34 .operation_mode = "normal";
defparam \LessThan1~34 .output_mode = "comb_only";
defparam \LessThan1~34 .register_cascade_mode = "off";
defparam \LessThan1~34 .sum_lutc_input = "datac";
defparam \LessThan1~34 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N6
maxii_lcell \LessThan1~35 (
// Equation(s):
// \LessThan1~35_combout  = (\LessThan1~15  & (\LessThan1~34_combout  & ((!\LessThan1~32_combout ) # (!\ledblink:count[18]~regout ))))

	.clk(gnd),
	.dataa(\ledblink:count[18]~regout ),
	.datab(\LessThan1~15 ),
	.datac(\LessThan1~32_combout ),
	.datad(\LessThan1~34_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~35_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~35 .lut_mask = "4c00";
defparam \LessThan1~35 .operation_mode = "normal";
defparam \LessThan1~35 .output_mode = "comb_only";
defparam \LessThan1~35 .register_cascade_mode = "off";
defparam \LessThan1~35 .sum_lutc_input = "datac";
defparam \LessThan1~35 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N2
maxii_lcell \max_count~0 (
// Equation(s):
// \max_count~0_combout  = (mux[0] $ (((mux[1]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(mux[0]),
	.datac(vcc),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\max_count~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \max_count~0 .lut_mask = "33cc";
defparam \max_count~0 .operation_mode = "normal";
defparam \max_count~0 .output_mode = "comb_only";
defparam \max_count~0 .register_cascade_mode = "off";
defparam \max_count~0 .sum_lutc_input = "datac";
defparam \max_count~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N7
maxii_lcell \LessThan1~26 (
// Equation(s):
// \LessThan1~26_combout  = (\ledblink:count[17]~regout  & (mux[0] & (mux[1] $ (!\ledblink:count[20]~regout )))) # (!\ledblink:count[17]~regout  & (((\ledblink:count[20]~regout  & !mux[0]))))

	.clk(gnd),
	.dataa(mux[1]),
	.datab(\ledblink:count[17]~regout ),
	.datac(\ledblink:count[20]~regout ),
	.datad(mux[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~26_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~26 .lut_mask = "8430";
defparam \LessThan1~26 .operation_mode = "normal";
defparam \LessThan1~26 .output_mode = "comb_only";
defparam \LessThan1~26 .register_cascade_mode = "off";
defparam \LessThan1~26 .sum_lutc_input = "datac";
defparam \LessThan1~26 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N9
maxii_lcell \LessThan1~33 (
// Equation(s):
// \LessThan1~33_combout  = (\LessThan1~15  & (mux[1] $ (\ledblink:count[16]~regout  $ (mux[0]))))

	.clk(gnd),
	.dataa(mux[1]),
	.datab(\ledblink:count[16]~regout ),
	.datac(mux[0]),
	.datad(\LessThan1~15 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~33_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~33 .lut_mask = "9600";
defparam \LessThan1~33 .operation_mode = "normal";
defparam \LessThan1~33 .output_mode = "comb_only";
defparam \LessThan1~33 .register_cascade_mode = "off";
defparam \LessThan1~33 .sum_lutc_input = "datac";
defparam \LessThan1~33 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N3
maxii_lcell \LessThan1~27 (
// Equation(s):
// \LessThan1~27_combout  = (\LessThan1~26_combout  & (\LessThan1~33_combout  & (\ledblink:count[19]~regout  $ (!\max_count~0_combout ))))

	.clk(gnd),
	.dataa(\ledblink:count[19]~regout ),
	.datab(\max_count~0_combout ),
	.datac(\LessThan1~26_combout ),
	.datad(\LessThan1~33_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~27_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~27 .lut_mask = "9000";
defparam \LessThan1~27 .operation_mode = "normal";
defparam \LessThan1~27 .output_mode = "comb_only";
defparam \LessThan1~27 .register_cascade_mode = "off";
defparam \LessThan1~27 .sum_lutc_input = "datac";
defparam \LessThan1~27 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N7
maxii_lcell \LessThan1~14 (
// Equation(s):
// \LessThan1~14_combout  = (\ledblink:count[22]~regout  & (((!\ledblink:count[21]~regout  & !mux[1])))) # (!\ledblink:count[22]~regout  & (((!mux[1]) # (!\ledblink:count[21]~regout )) # (!mux[0])))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(\ledblink:count[22]~regout ),
	.datac(\ledblink:count[21]~regout ),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~14 .lut_mask = "133f";
defparam \LessThan1~14 .operation_mode = "normal";
defparam \LessThan1~14 .output_mode = "comb_only";
defparam \LessThan1~14 .register_cascade_mode = "off";
defparam \LessThan1~14 .sum_lutc_input = "datac";
defparam \LessThan1~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N9
maxii_lcell \LessThan1~16 (
// Equation(s):
// \LessThan1~16_combout  = (\LessThan1~15  & (\ledblink:count[20]~regout  $ (((mux[0] & !mux[1])))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(\ledblink:count[20]~regout ),
	.datac(\LessThan1~15 ),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~16 .lut_mask = "c060";
defparam \LessThan1~16 .operation_mode = "normal";
defparam \LessThan1~16 .output_mode = "comb_only";
defparam \LessThan1~16 .register_cascade_mode = "off";
defparam \LessThan1~16 .sum_lutc_input = "datac";
defparam \LessThan1~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N0
maxii_lcell \LessThan1~17 (
// Equation(s):
// \LessThan1~17_combout  = (\LessThan1~14_combout ) # ((!\ledblink:count[19]~regout  & (\max_count~0_combout  & \LessThan1~16_combout )))

	.clk(gnd),
	.dataa(\ledblink:count[19]~regout ),
	.datab(\max_count~0_combout ),
	.datac(\LessThan1~14_combout ),
	.datad(\LessThan1~16_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~17 .lut_mask = "f4f0";
defparam \LessThan1~17 .operation_mode = "normal";
defparam \LessThan1~17 .output_mode = "comb_only";
defparam \LessThan1~17 .register_cascade_mode = "off";
defparam \LessThan1~17 .sum_lutc_input = "datac";
defparam \LessThan1~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N1
maxii_lcell \LessThan1~18 (
// Equation(s):
// \LessThan1~18_combout  = (\LessThan1~17_combout ) # ((!\Equal0~0_combout  & (\LessThan1~15  & !\ledblink:count[20]~regout )))

	.clk(gnd),
	.dataa(\Equal0~0_combout ),
	.datab(\LessThan1~15 ),
	.datac(\ledblink:count[20]~regout ),
	.datad(\LessThan1~17_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~18 .lut_mask = "ff04";
defparam \LessThan1~18 .operation_mode = "normal";
defparam \LessThan1~18 .output_mode = "comb_only";
defparam \LessThan1~18 .register_cascade_mode = "off";
defparam \LessThan1~18 .sum_lutc_input = "datac";
defparam \LessThan1~18 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N5
maxii_lcell \LessThan1~9 (
// Equation(s):
// \LessThan1~9_combout  = (\ledblink:count[12]~regout  & ((\ledblink:count[11]~regout ) # ((\ledblink:count[9]~regout  & \ledblink:count[10]~regout ))))

	.clk(gnd),
	.dataa(\ledblink:count[11]~regout ),
	.datab(\ledblink:count[9]~regout ),
	.datac(\ledblink:count[12]~regout ),
	.datad(\ledblink:count[10]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~9 .lut_mask = "e0a0";
defparam \LessThan1~9 .operation_mode = "normal";
defparam \LessThan1~9 .output_mode = "comb_only";
defparam \LessThan1~9 .register_cascade_mode = "off";
defparam \LessThan1~9 .sum_lutc_input = "datac";
defparam \LessThan1~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N7
maxii_lcell \LessThan1~7 (
// Equation(s):
// \LessThan1~7_combout  = ((!\ledblink:count[10]~regout  & ((!\ledblink:count[8]~regout ) # (!\ledblink:count[9]~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\ledblink:count[9]~regout ),
	.datac(\ledblink:count[8]~regout ),
	.datad(\ledblink:count[10]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~7 .lut_mask = "003f";
defparam \LessThan1~7 .operation_mode = "normal";
defparam \LessThan1~7 .output_mode = "comb_only";
defparam \LessThan1~7 .register_cascade_mode = "off";
defparam \LessThan1~7 .sum_lutc_input = "datac";
defparam \LessThan1~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N8
maxii_lcell \mux[1] (
// Equation(s):
// \LessThan1~6  = (((mux[1] & \ledblink:count[11]~regout )))
// mux[1] = DFFEAS(\LessThan1~6 , !GLOBAL(\sck~combout ), VCC, , \modeshift~combout , mux[0], , , VCC)

	.clk(!\sck~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(mux[0]),
	.datad(\ledblink:count[11]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\modeshift~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~6 ),
	.regout(mux[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mux[1] .lut_mask = "f000";
defparam \mux[1] .operation_mode = "normal";
defparam \mux[1] .output_mode = "reg_and_comb";
defparam \mux[1] .register_cascade_mode = "off";
defparam \mux[1] .sum_lutc_input = "qfbk";
defparam \mux[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y3_N3
maxii_lcell \LessThan1~23 (
// Equation(s):
// \LessThan1~23_combout  = (!\ledblink:count[13]~regout  & (((\LessThan1~7_combout ) # (!\LessThan1~6 )) # (!\ledblink:count[12]~regout )))

	.clk(gnd),
	.dataa(\ledblink:count[12]~regout ),
	.datab(\LessThan1~7_combout ),
	.datac(\ledblink:count[13]~regout ),
	.datad(\LessThan1~6 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~23_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~23 .lut_mask = "0d0f";
defparam \LessThan1~23 .operation_mode = "normal";
defparam \LessThan1~23 .output_mode = "comb_only";
defparam \LessThan1~23 .register_cascade_mode = "off";
defparam \LessThan1~23 .sum_lutc_input = "datac";
defparam \LessThan1~23 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N4
maxii_lcell \LessThan1~24 (
// Equation(s):
// \LessThan1~24_combout  = ((\LessThan1~23_combout ) # ((!mux[1] & !\LessThan1~9_combout ))) # (!mux[0])

	.clk(gnd),
	.dataa(mux[1]),
	.datab(mux[0]),
	.datac(\LessThan1~9_combout ),
	.datad(\LessThan1~23_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~24_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~24 .lut_mask = "ff37";
defparam \LessThan1~24 .operation_mode = "normal";
defparam \LessThan1~24 .output_mode = "comb_only";
defparam \LessThan1~24 .register_cascade_mode = "off";
defparam \LessThan1~24 .sum_lutc_input = "datac";
defparam \LessThan1~24 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N9
maxii_lcell \LessThan1~19 (
// Equation(s):
// \LessThan1~19_combout  = ((!\ledblink:count[12]~regout  & ((!\ledblink:count[10]~regout ) # (!\ledblink:count[11]~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\ledblink:count[12]~regout ),
	.datac(\ledblink:count[11]~regout ),
	.datad(\ledblink:count[10]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~19 .lut_mask = "0333";
defparam \LessThan1~19 .operation_mode = "normal";
defparam \LessThan1~19 .output_mode = "comb_only";
defparam \LessThan1~19 .register_cascade_mode = "off";
defparam \LessThan1~19 .sum_lutc_input = "datac";
defparam \LessThan1~19 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N6
maxii_lcell \LessThan1~20 (
// Equation(s):
// \LessThan1~20_combout  = (!\ledblink:count[15]~regout  & (((\LessThan1~19_combout ) # (!mux[1])) # (!\ledblink:count[13]~regout )))

	.clk(gnd),
	.dataa(\ledblink:count[13]~regout ),
	.datab(\LessThan1~19_combout ),
	.datac(\ledblink:count[15]~regout ),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~20 .lut_mask = "0d0f";
defparam \LessThan1~20 .operation_mode = "normal";
defparam \LessThan1~20 .output_mode = "comb_only";
defparam \LessThan1~20 .register_cascade_mode = "off";
defparam \LessThan1~20 .sum_lutc_input = "datac";
defparam \LessThan1~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N8
maxii_lcell \LessThan1~8 (
// Equation(s):
// \LessThan1~8_combout  = (!\ledblink:count[8]~regout  & (!\ledblink:count[11]~regout  & (!\ledblink:count[9]~regout  & !\ledblink:count[10]~regout )))

	.clk(gnd),
	.dataa(\ledblink:count[8]~regout ),
	.datab(\ledblink:count[11]~regout ),
	.datac(\ledblink:count[9]~regout ),
	.datad(\ledblink:count[10]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~8 .lut_mask = "0001";
defparam \LessThan1~8 .operation_mode = "normal";
defparam \LessThan1~8 .output_mode = "comb_only";
defparam \LessThan1~8 .register_cascade_mode = "off";
defparam \LessThan1~8 .sum_lutc_input = "datac";
defparam \LessThan1~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N0
maxii_lcell \LessThan1~21 (
// Equation(s):
// \LessThan1~21_combout  = (((!\ledblink:count[12]~regout  & \LessThan1~8_combout )) # (!\ledblink:count[14]~regout )) # (!\ledblink:count[13]~regout )

	.clk(gnd),
	.dataa(\ledblink:count[13]~regout ),
	.datab(\ledblink:count[12]~regout ),
	.datac(\ledblink:count[14]~regout ),
	.datad(\LessThan1~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~21 .lut_mask = "7f5f";
defparam \LessThan1~21 .operation_mode = "normal";
defparam \LessThan1~21 .output_mode = "comb_only";
defparam \LessThan1~21 .register_cascade_mode = "off";
defparam \LessThan1~21 .sum_lutc_input = "datac";
defparam \LessThan1~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N1
maxii_lcell \LessThan1~22 (
// Equation(s):
// \LessThan1~22_combout  = (!mux[0] & ((\LessThan1~20_combout ) # ((!mux[1] & \LessThan1~21_combout ))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(mux[1]),
	.datac(\LessThan1~20_combout ),
	.datad(\LessThan1~21_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~22_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~22 .lut_mask = "5150";
defparam \LessThan1~22 .operation_mode = "normal";
defparam \LessThan1~22 .output_mode = "comb_only";
defparam \LessThan1~22 .register_cascade_mode = "off";
defparam \LessThan1~22 .sum_lutc_input = "datac";
defparam \LessThan1~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N2
maxii_lcell \LessThan1~25 (
// Equation(s):
// \LessThan1~25_combout  = (\LessThan1~22_combout ) # ((!\ledblink:count[15]~regout  & (!\ledblink:count[14]~regout  & \LessThan1~24_combout )))

	.clk(gnd),
	.dataa(\ledblink:count[15]~regout ),
	.datab(\ledblink:count[14]~regout ),
	.datac(\LessThan1~24_combout ),
	.datad(\LessThan1~22_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~25_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~25 .lut_mask = "ff10";
defparam \LessThan1~25 .operation_mode = "normal";
defparam \LessThan1~25 .output_mode = "comb_only";
defparam \LessThan1~25 .register_cascade_mode = "off";
defparam \LessThan1~25 .sum_lutc_input = "datac";
defparam \LessThan1~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N3
maxii_lcell \LessThan1~28 (
// Equation(s):
// \LessThan1~28_combout  = (\LessThan1~35_combout ) # ((\LessThan1~18_combout ) # ((\LessThan1~27_combout  & \LessThan1~25_combout )))

	.clk(gnd),
	.dataa(\LessThan1~35_combout ),
	.datab(\LessThan1~27_combout ),
	.datac(\LessThan1~18_combout ),
	.datad(\LessThan1~25_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~28_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~28 .lut_mask = "fefa";
defparam \LessThan1~28 .operation_mode = "normal";
defparam \LessThan1~28 .output_mode = "comb_only";
defparam \LessThan1~28 .register_cascade_mode = "off";
defparam \LessThan1~28 .sum_lutc_input = "datac";
defparam \LessThan1~28 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N4
maxii_lcell \LessThan1~31 (
// Equation(s):
// \LessThan1~31_combout  = (\LessThan1~10_combout ) # ((\LessThan1~13_combout ) # ((\LessThan1~30_combout  & \LessThan1~28_combout )))

	.clk(gnd),
	.dataa(\LessThan1~10_combout ),
	.datab(\LessThan1~13_combout ),
	.datac(\LessThan1~30_combout ),
	.datad(\LessThan1~28_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~31_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~31 .lut_mask = "feee";
defparam \LessThan1~31 .operation_mode = "normal";
defparam \LessThan1~31 .output_mode = "comb_only";
defparam \LessThan1~31 .register_cascade_mode = "off";
defparam \LessThan1~31 .sum_lutc_input = "datac";
defparam \LessThan1~31 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N8
maxii_lcell \LessThan0~34 (
// Equation(s):
// \LessThan0~34_combout  = (\ledblink:count[15]~regout  & (((\ledblink:count[16]~regout )) # (!mux[0]))) # (!\ledblink:count[15]~regout  & ((mux[1] & (!mux[0])) # (!mux[1] & ((\ledblink:count[16]~regout )))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(\ledblink:count[15]~regout ),
	.datac(\ledblink:count[16]~regout ),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~34_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~34 .lut_mask = "d5f4";
defparam \LessThan0~34 .operation_mode = "normal";
defparam \LessThan0~34 .output_mode = "comb_only";
defparam \LessThan0~34 .register_cascade_mode = "off";
defparam \LessThan0~34 .sum_lutc_input = "datac";
defparam \LessThan0~34 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N4
maxii_lcell \LessThan0~12 (
// Equation(s):
// \LessThan0~12_combout  = (mux[0] & (\ledblink:count[20]~regout  & (\ledblink:count[21]~regout  $ (mux[1])))) # (!mux[0] & (\ledblink:count[21]~regout  & (\ledblink:count[20]~regout  $ (mux[1]))))

	.clk(gnd),
	.dataa(\ledblink:count[21]~regout ),
	.datab(mux[0]),
	.datac(\ledblink:count[20]~regout ),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~12 .lut_mask = "42a0";
defparam \LessThan0~12 .operation_mode = "normal";
defparam \LessThan0~12 .output_mode = "comb_only";
defparam \LessThan0~12 .register_cascade_mode = "off";
defparam \LessThan0~12 .sum_lutc_input = "datac";
defparam \LessThan0~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N5
maxii_lcell \LessThan0~13 (
// Equation(s):
// \LessThan0~13_combout  = (\LessThan0~12_combout  & (\ledblink:count[19]~regout  $ (((!mux[1] & mux[0])))))

	.clk(gnd),
	.dataa(mux[1]),
	.datab(mux[0]),
	.datac(\ledblink:count[19]~regout ),
	.datad(\LessThan0~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~13 .lut_mask = "b400";
defparam \LessThan0~13 .operation_mode = "normal";
defparam \LessThan0~13 .output_mode = "comb_only";
defparam \LessThan0~13 .register_cascade_mode = "off";
defparam \LessThan0~13 .sum_lutc_input = "datac";
defparam \LessThan0~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N2
maxii_lcell \LessThan0~33 (
// Equation(s):
// \LessThan0~33_combout  = (\LessThan0~13_combout  & (mux[0] $ (\ledblink:count[18]~regout  $ (!mux[1]))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(\ledblink:count[18]~regout ),
	.datac(mux[1]),
	.datad(\LessThan0~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~33_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~33 .lut_mask = "6900";
defparam \LessThan0~33 .operation_mode = "normal";
defparam \LessThan0~33 .output_mode = "comb_only";
defparam \LessThan0~33 .register_cascade_mode = "off";
defparam \LessThan0~33 .sum_lutc_input = "datac";
defparam \LessThan0~33 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N3
maxii_lcell \LessThan0~25 (
// Equation(s):
// \LessThan0~25_combout  = ((\LessThan0~33_combout  & ((!\ledblink:count[17]~regout ) # (!\LessThan0~34_combout ))))

	.clk(gnd),
	.dataa(\LessThan0~34_combout ),
	.datab(vcc),
	.datac(\ledblink:count[17]~regout ),
	.datad(\LessThan0~33_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~25_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~25 .lut_mask = "5f00";
defparam \LessThan0~25 .operation_mode = "normal";
defparam \LessThan0~25 .output_mode = "comb_only";
defparam \LessThan0~25 .register_cascade_mode = "off";
defparam \LessThan0~25 .sum_lutc_input = "datac";
defparam \LessThan0~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N7
maxii_lcell \LessThan0~32 (
// Equation(s):
// \LessThan0~32_combout  = (\LessThan0~10_combout  & (\ledblink:count[22]~regout  $ (((mux[0] & !mux[1])))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(\ledblink:count[22]~regout ),
	.datac(mux[1]),
	.datad(\LessThan0~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~32_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~32 .lut_mask = "c600";
defparam \LessThan0~32 .operation_mode = "normal";
defparam \LessThan0~32 .output_mode = "comb_only";
defparam \LessThan0~32 .register_cascade_mode = "off";
defparam \LessThan0~32 .sum_lutc_input = "datac";
defparam \LessThan0~32 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N7
maxii_lcell \LessThan0~11 (
// Equation(s):
// \LessThan0~11_combout  = (\ledblink:count[20]~regout  & (!\ledblink:count[21]~regout  & ((!mux[1]) # (!mux[0])))) # (!\ledblink:count[20]~regout  & (((!mux[1])) # (!\ledblink:count[21]~regout )))

	.clk(gnd),
	.dataa(\ledblink:count[20]~regout ),
	.datab(\ledblink:count[21]~regout ),
	.datac(mux[0]),
	.datad(mux[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~11 .lut_mask = "1377";
defparam \LessThan0~11 .operation_mode = "normal";
defparam \LessThan0~11 .output_mode = "comb_only";
defparam \LessThan0~11 .register_cascade_mode = "off";
defparam \LessThan0~11 .sum_lutc_input = "datac";
defparam \LessThan0~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N8
maxii_lcell \LessThan0~14 (
// Equation(s):
// \LessThan0~14_combout  = (\LessThan0~11_combout ) # ((!\ledblink:count[18]~regout  & (\max_count~0_combout  & \LessThan0~13_combout )))

	.clk(gnd),
	.dataa(\ledblink:count[18]~regout ),
	.datab(\max_count~0_combout ),
	.datac(\LessThan0~11_combout ),
	.datad(\LessThan0~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~14 .lut_mask = "f4f0";
defparam \LessThan0~14 .operation_mode = "normal";
defparam \LessThan0~14 .output_mode = "comb_only";
defparam \LessThan0~14 .register_cascade_mode = "off";
defparam \LessThan0~14 .sum_lutc_input = "datac";
defparam \LessThan0~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N9
maxii_lcell \LessThan0~15 (
// Equation(s):
// \LessThan0~15_combout  = (\LessThan0~14_combout ) # ((!\ledblink:count[19]~regout  & (!\Equal0~0_combout  & \LessThan0~12_combout )))

	.clk(gnd),
	.dataa(\ledblink:count[19]~regout ),
	.datab(\Equal0~0_combout ),
	.datac(\LessThan0~12_combout ),
	.datad(\LessThan0~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~15 .lut_mask = "ff10";
defparam \LessThan0~15 .operation_mode = "normal";
defparam \LessThan0~15 .output_mode = "comb_only";
defparam \LessThan0~15 .register_cascade_mode = "off";
defparam \LessThan0~15 .sum_lutc_input = "datac";
defparam \LessThan0~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N0
maxii_lcell \LessThan0~19 (
// Equation(s):
// \LessThan0~19_combout  = ((!\ledblink:count[14]~regout  & ((!\ledblink:count[13]~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\ledblink:count[14]~regout ),
	.datac(vcc),
	.datad(\ledblink:count[13]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~19 .lut_mask = "0033";
defparam \LessThan0~19 .operation_mode = "normal";
defparam \LessThan0~19 .output_mode = "comb_only";
defparam \LessThan0~19 .register_cascade_mode = "off";
defparam \LessThan0~19 .sum_lutc_input = "datac";
defparam \LessThan0~19 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N3
maxii_lcell \LessThan0~20 (
// Equation(s):
// \LessThan0~20_combout  = (((!\ledblink:count[7]~regout  & \LessThan1~8_combout )) # (!\ledblink:count[12]~regout )) # (!\ledblink:count[13]~regout )

	.clk(gnd),
	.dataa(\ledblink:count[7]~regout ),
	.datab(\ledblink:count[13]~regout ),
	.datac(\ledblink:count[12]~regout ),
	.datad(\LessThan1~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~20 .lut_mask = "7f3f";
defparam \LessThan0~20 .operation_mode = "normal";
defparam \LessThan0~20 .output_mode = "comb_only";
defparam \LessThan0~20 .register_cascade_mode = "off";
defparam \LessThan0~20 .sum_lutc_input = "datac";
defparam \LessThan0~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N4
maxii_lcell \LessThan0~21 (
// Equation(s):
// \LessThan0~21_combout  = (\ledblink:count[14]~regout  & (!mux[1] & ((\LessThan0~20_combout )))) # (!\ledblink:count[14]~regout  & (((!\LessThan1~9_combout )) # (!mux[1])))

	.clk(gnd),
	.dataa(\ledblink:count[14]~regout ),
	.datab(mux[1]),
	.datac(\LessThan1~9_combout ),
	.datad(\LessThan0~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~21 .lut_mask = "3715";
defparam \LessThan0~21 .operation_mode = "normal";
defparam \LessThan0~21 .output_mode = "comb_only";
defparam \LessThan0~21 .register_cascade_mode = "off";
defparam \LessThan0~21 .sum_lutc_input = "datac";
defparam \LessThan0~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N2
maxii_lcell \LessThan0~16 (
// Equation(s):
// \LessThan0~16_combout  = ((!\ledblink:count[9]~regout  & ((!\ledblink:count[8]~regout ) # (!\ledblink:count[7]~regout )))) # (!\ledblink:count[10]~regout )

	.clk(gnd),
	.dataa(\ledblink:count[7]~regout ),
	.datab(\ledblink:count[8]~regout ),
	.datac(\ledblink:count[9]~regout ),
	.datad(\ledblink:count[10]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~16 .lut_mask = "07ff";
defparam \LessThan0~16 .operation_mode = "normal";
defparam \LessThan0~16 .output_mode = "comb_only";
defparam \LessThan0~16 .register_cascade_mode = "off";
defparam \LessThan0~16 .sum_lutc_input = "datac";
defparam \LessThan0~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N5
maxii_lcell \LessThan0~17 (
// Equation(s):
// \LessThan0~17_combout  = ((!\ledblink:count[12]~regout  & ((\LessThan0~16_combout ) # (!\LessThan1~6 )))) # (!mux[0])

	.clk(gnd),
	.dataa(\ledblink:count[12]~regout ),
	.datab(mux[0]),
	.datac(\LessThan1~6 ),
	.datad(\LessThan0~16_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~17 .lut_mask = "7737";
defparam \LessThan0~17 .operation_mode = "normal";
defparam \LessThan0~17 .output_mode = "comb_only";
defparam \LessThan0~17 .register_cascade_mode = "off";
defparam \LessThan0~17 .sum_lutc_input = "datac";
defparam \LessThan0~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N6
maxii_lcell \LessThan0~18 (
// Equation(s):
// \LessThan0~18_combout  = (\LessThan0~17_combout ) # ((!mux[1] & ((\LessThan1~7_combout ) # (!\ledblink:count[11]~regout ))))

	.clk(gnd),
	.dataa(\ledblink:count[11]~regout ),
	.datab(\LessThan1~7_combout ),
	.datac(mux[1]),
	.datad(\LessThan0~17_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~18 .lut_mask = "ff0d";
defparam \LessThan0~18 .operation_mode = "normal";
defparam \LessThan0~18 .output_mode = "comb_only";
defparam \LessThan0~18 .register_cascade_mode = "off";
defparam \LessThan0~18 .sum_lutc_input = "datac";
defparam \LessThan0~18 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N7
maxii_lcell \LessThan0~22 (
// Equation(s):
// \LessThan0~22_combout  = (mux[0] & (\LessThan0~19_combout  & ((\LessThan0~18_combout )))) # (!mux[0] & ((\LessThan0~21_combout ) # ((\LessThan0~19_combout  & \LessThan0~18_combout ))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(\LessThan0~19_combout ),
	.datac(\LessThan0~21_combout ),
	.datad(\LessThan0~18_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~22_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~22 .lut_mask = "dc50";
defparam \LessThan0~22 .operation_mode = "normal";
defparam \LessThan0~22 .output_mode = "comb_only";
defparam \LessThan0~22 .register_cascade_mode = "off";
defparam \LessThan0~22 .sum_lutc_input = "datac";
defparam \LessThan0~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N5
maxii_lcell \LessThan0~23 (
// Equation(s):
// \LessThan0~23_combout  = ((\LessThan0~33_combout  & (mux[0] $ (!\ledblink:count[16]~regout ))))

	.clk(gnd),
	.dataa(mux[0]),
	.datab(vcc),
	.datac(\ledblink:count[16]~regout ),
	.datad(\LessThan0~33_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~23_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~23 .lut_mask = "a500";
defparam \LessThan0~23 .operation_mode = "normal";
defparam \LessThan0~23 .output_mode = "comb_only";
defparam \LessThan0~23 .register_cascade_mode = "off";
defparam \LessThan0~23 .sum_lutc_input = "datac";
defparam \LessThan0~23 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N2
maxii_lcell \LessThan0~24 (
// Equation(s):
// \LessThan0~24_combout  = (\LessThan0~22_combout  & (\LessThan0~23_combout  & (\ledblink:count[15]~regout  $ (\max_count~0_combout ))))

	.clk(gnd),
	.dataa(\ledblink:count[15]~regout ),
	.datab(\max_count~0_combout ),
	.datac(\LessThan0~22_combout ),
	.datad(\LessThan0~23_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~24_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~24 .lut_mask = "6000";
defparam \LessThan0~24 .operation_mode = "normal";
defparam \LessThan0~24 .output_mode = "comb_only";
defparam \LessThan0~24 .register_cascade_mode = "off";
defparam \LessThan0~24 .sum_lutc_input = "datac";
defparam \LessThan0~24 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N0
maxii_lcell \LessThan0~26 (
// Equation(s):
// \LessThan0~26_combout  = (\LessThan0~32_combout  & ((\LessThan0~25_combout ) # ((\LessThan0~15_combout ) # (\LessThan0~24_combout ))))

	.clk(gnd),
	.dataa(\LessThan0~25_combout ),
	.datab(\LessThan0~32_combout ),
	.datac(\LessThan0~15_combout ),
	.datad(\LessThan0~24_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~26_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~26 .lut_mask = "ccc8";
defparam \LessThan0~26 .operation_mode = "normal";
defparam \LessThan0~26 .output_mode = "comb_only";
defparam \LessThan0~26 .register_cascade_mode = "off";
defparam \LessThan0~26 .sum_lutc_input = "datac";
defparam \LessThan0~26 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N1
maxii_lcell \count~1 (
// Equation(s):
// \count~1_combout  = ((!\LessThan0~31_combout  & (!\LessThan1~31_combout  & !\LessThan0~26_combout ))) # (!\count~0_combout )

	.clk(gnd),
	.dataa(\LessThan0~31_combout ),
	.datab(\count~0_combout ),
	.datac(\LessThan1~31_combout ),
	.datad(\LessThan0~26_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\count~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \count~1 .lut_mask = "3337";
defparam \count~1 .operation_mode = "normal";
defparam \count~1 .output_mode = "comb_only";
defparam \count~1 .register_cascade_mode = "off";
defparam \count~1 .sum_lutc_input = "datac";
defparam \count~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N9
maxii_lcell \mux[2] (
// Equation(s):
// mux[2] = DFFEAS(GND, !GLOBAL(\sck~combout ), VCC, , \modeshift~combout , mux[1], , , VCC)

	.clk(!\sck~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(mux[1]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\modeshift~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mux[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mux[2] .lut_mask = "0000";
defparam \mux[2] .operation_mode = "normal";
defparam \mux[2] .output_mode = "reg_only";
defparam \mux[2] .register_cascade_mode = "off";
defparam \mux[2] .sum_lutc_input = "datac";
defparam \mux[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N7
maxii_lcell \mux[3] (
// Equation(s):
// mux[3] = DFFEAS((((mux[2]))), !GLOBAL(\sck~combout ), VCC, , \modeshift~combout , , , , )

	.clk(!\sck~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(mux[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\modeshift~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mux[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mux[3] .lut_mask = "ff00";
defparam \mux[3] .operation_mode = "normal";
defparam \mux[3] .output_mode = "reg_only";
defparam \mux[3] .register_cascade_mode = "off";
defparam \mux[3] .sum_lutc_input = "datac";
defparam \mux[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N1
maxii_lcell siggate(
// Equation(s):
// \siggate~regout  = DFFEAS((((\syn1siggate~regout ) # (mux[3]))), GLOBAL(\sigclk~combout ), GLOBAL(\ss~combout ), , , , , , )

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\syn1siggate~regout ),
	.datad(mux[3]),
	.aclr(!\ss~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\siggate~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam siggate.lut_mask = "fff0";
defparam siggate.operation_mode = "normal";
defparam siggate.output_mode = "reg_only";
defparam siggate.register_cascade_mode = "off";
defparam siggate.sum_lutc_input = "datac";
defparam siggate.synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N4
maxii_lcell \eventhold[1] (
// Equation(s):
// eventhold[1] = DFFEAS(GND, GLOBAL(\sigclk~combout ), VCC, , !\siggate~regout , eventcounter[1], , , VCC)

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(eventcounter[1]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventhold[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[1] .lut_mask = "0000";
defparam \eventhold[1] .operation_mode = "normal";
defparam \eventhold[1] .output_mode = "reg_only";
defparam \eventhold[1] .register_cascade_mode = "off";
defparam \eventhold[1] .sum_lutc_input = "datac";
defparam \eventhold[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N2
maxii_lcell \eventhold[5] (
// Equation(s):
// \Mux0~2  = (readindex[2] & (readindex[3] & ((eventhold[1])))) # (!readindex[2] & (((eventhold[5])) # (!readindex[3])))

	.clk(\sigclk~combout ),
	.dataa(readindex[2]),
	.datab(readindex[3]),
	.datac(eventcounter[5]),
	.datad(eventhold[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~2 ),
	.regout(eventhold[5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[5] .lut_mask = "d951";
defparam \eventhold[5] .operation_mode = "normal";
defparam \eventhold[5] .output_mode = "comb_only";
defparam \eventhold[5] .register_cascade_mode = "off";
defparam \eventhold[5] .sum_lutc_input = "qfbk";
defparam \eventhold[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N8
maxii_lcell \eventcounter[6] (
// Equation(s):
// eventcounter[6] = DFFEAS(eventcounter[6] $ (((((!\eventcounter[2]~7  & \eventcounter[5]~13 ) # (\eventcounter[2]~7  & \eventcounter[5]~13COUT1_35 ))))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[6]~3  = CARRY(((!\eventcounter[5]~13 )) # (!eventcounter[6]))
// \eventcounter[6]~3COUT1_36  = CARRY(((!\eventcounter[5]~13COUT1_35 )) # (!eventcounter[6]))

	.clk(\sigclk~combout ),
	.dataa(eventcounter[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[2]~7 ),
	.cin0(\eventcounter[5]~13 ),
	.cin1(\eventcounter[5]~13COUT1_35 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[6]),
	.cout(),
	.cout0(\eventcounter[6]~3 ),
	.cout1(\eventcounter[6]~3COUT1_36 ));
// synopsys translate_off
defparam \eventcounter[6] .cin0_used = "true";
defparam \eventcounter[6] .cin1_used = "true";
defparam \eventcounter[6] .cin_used = "true";
defparam \eventcounter[6] .lut_mask = "5a5f";
defparam \eventcounter[6] .operation_mode = "arithmetic";
defparam \eventcounter[6] .output_mode = "reg_only";
defparam \eventcounter[6] .register_cascade_mode = "off";
defparam \eventcounter[6] .sum_lutc_input = "cin";
defparam \eventcounter[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N9
maxii_lcell \eventcounter[7] (
// Equation(s):
// eventcounter[7] = DFFEAS((eventcounter[7] $ ((!(!\eventcounter[2]~7  & \eventcounter[6]~3 ) # (\eventcounter[2]~7  & \eventcounter[6]~3COUT1_36 )))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[7]~25  = CARRY(((eventcounter[7] & !\eventcounter[6]~3COUT1_36 )))

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(eventcounter[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[2]~7 ),
	.cin0(\eventcounter[6]~3 ),
	.cin1(\eventcounter[6]~3COUT1_36 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[7]),
	.cout(\eventcounter[7]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventcounter[7] .cin0_used = "true";
defparam \eventcounter[7] .cin1_used = "true";
defparam \eventcounter[7] .cin_used = "true";
defparam \eventcounter[7] .lut_mask = "c30c";
defparam \eventcounter[7] .operation_mode = "arithmetic";
defparam \eventcounter[7] .output_mode = "reg_only";
defparam \eventcounter[7] .register_cascade_mode = "off";
defparam \eventcounter[7] .sum_lutc_input = "cin";
defparam \eventcounter[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N0
maxii_lcell \eventcounter[8] (
// Equation(s):
// eventcounter[8] = DFFEAS((eventcounter[8] $ ((\eventcounter[7]~25 ))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[8]~19  = CARRY(((!\eventcounter[7]~25 ) # (!eventcounter[8])))
// \eventcounter[8]~19COUT1_37  = CARRY(((!\eventcounter[7]~25 ) # (!eventcounter[8])))

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(eventcounter[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[7]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[8]),
	.cout(),
	.cout0(\eventcounter[8]~19 ),
	.cout1(\eventcounter[8]~19COUT1_37 ));
// synopsys translate_off
defparam \eventcounter[8] .cin_used = "true";
defparam \eventcounter[8] .lut_mask = "3c3f";
defparam \eventcounter[8] .operation_mode = "arithmetic";
defparam \eventcounter[8] .output_mode = "reg_only";
defparam \eventcounter[8] .register_cascade_mode = "off";
defparam \eventcounter[8] .sum_lutc_input = "cin";
defparam \eventcounter[8] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N1
maxii_lcell \eventcounter[9] (
// Equation(s):
// eventcounter[9] = DFFEAS((eventcounter[9] $ ((!(!\eventcounter[7]~25  & \eventcounter[8]~19 ) # (\eventcounter[7]~25  & \eventcounter[8]~19COUT1_37 )))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[9]~11  = CARRY(((eventcounter[9] & !\eventcounter[8]~19 )))
// \eventcounter[9]~11COUT1_38  = CARRY(((eventcounter[9] & !\eventcounter[8]~19COUT1_37 )))

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(eventcounter[9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[7]~25 ),
	.cin0(\eventcounter[8]~19 ),
	.cin1(\eventcounter[8]~19COUT1_37 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[9]),
	.cout(),
	.cout0(\eventcounter[9]~11 ),
	.cout1(\eventcounter[9]~11COUT1_38 ));
// synopsys translate_off
defparam \eventcounter[9] .cin0_used = "true";
defparam \eventcounter[9] .cin1_used = "true";
defparam \eventcounter[9] .cin_used = "true";
defparam \eventcounter[9] .lut_mask = "c30c";
defparam \eventcounter[9] .operation_mode = "arithmetic";
defparam \eventcounter[9] .output_mode = "reg_only";
defparam \eventcounter[9] .register_cascade_mode = "off";
defparam \eventcounter[9] .sum_lutc_input = "cin";
defparam \eventcounter[9] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N2
maxii_lcell \eventcounter[10] (
// Equation(s):
// eventcounter[10] = DFFEAS((eventcounter[10] $ (((!\eventcounter[7]~25  & \eventcounter[9]~11 ) # (\eventcounter[7]~25  & \eventcounter[9]~11COUT1_38 )))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[10]~5  = CARRY(((!\eventcounter[9]~11 ) # (!eventcounter[10])))
// \eventcounter[10]~5COUT1_39  = CARRY(((!\eventcounter[9]~11COUT1_38 ) # (!eventcounter[10])))

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(eventcounter[10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[7]~25 ),
	.cin0(\eventcounter[9]~11 ),
	.cin1(\eventcounter[9]~11COUT1_38 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[10]),
	.cout(),
	.cout0(\eventcounter[10]~5 ),
	.cout1(\eventcounter[10]~5COUT1_39 ));
// synopsys translate_off
defparam \eventcounter[10] .cin0_used = "true";
defparam \eventcounter[10] .cin1_used = "true";
defparam \eventcounter[10] .cin_used = "true";
defparam \eventcounter[10] .lut_mask = "3c3f";
defparam \eventcounter[10] .operation_mode = "arithmetic";
defparam \eventcounter[10] .output_mode = "reg_only";
defparam \eventcounter[10] .register_cascade_mode = "off";
defparam \eventcounter[10] .sum_lutc_input = "cin";
defparam \eventcounter[10] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N3
maxii_lcell \eventcounter[11] (
// Equation(s):
// eventcounter[11] = DFFEAS(eventcounter[11] $ ((((!(!\eventcounter[7]~25  & \eventcounter[10]~5 ) # (\eventcounter[7]~25  & \eventcounter[10]~5COUT1_39 ))))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[11]~27  = CARRY((eventcounter[11] & ((!\eventcounter[10]~5 ))))
// \eventcounter[11]~27COUT1_40  = CARRY((eventcounter[11] & ((!\eventcounter[10]~5COUT1_39 ))))

	.clk(\sigclk~combout ),
	.dataa(eventcounter[11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[7]~25 ),
	.cin0(\eventcounter[10]~5 ),
	.cin1(\eventcounter[10]~5COUT1_39 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[11]),
	.cout(),
	.cout0(\eventcounter[11]~27 ),
	.cout1(\eventcounter[11]~27COUT1_40 ));
// synopsys translate_off
defparam \eventcounter[11] .cin0_used = "true";
defparam \eventcounter[11] .cin1_used = "true";
defparam \eventcounter[11] .cin_used = "true";
defparam \eventcounter[11] .lut_mask = "a50a";
defparam \eventcounter[11] .operation_mode = "arithmetic";
defparam \eventcounter[11] .output_mode = "reg_only";
defparam \eventcounter[11] .register_cascade_mode = "off";
defparam \eventcounter[11] .sum_lutc_input = "cin";
defparam \eventcounter[11] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N4
maxii_lcell \eventcounter[12] (
// Equation(s):
// eventcounter[12] = DFFEAS(eventcounter[12] $ (((((!\eventcounter[7]~25  & \eventcounter[11]~27 ) # (\eventcounter[7]~25  & \eventcounter[11]~27COUT1_40 ))))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[12]~23  = CARRY(((!\eventcounter[11]~27COUT1_40 )) # (!eventcounter[12]))

	.clk(\sigclk~combout ),
	.dataa(eventcounter[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[7]~25 ),
	.cin0(\eventcounter[11]~27 ),
	.cin1(\eventcounter[11]~27COUT1_40 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[12]),
	.cout(\eventcounter[12]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventcounter[12] .cin0_used = "true";
defparam \eventcounter[12] .cin1_used = "true";
defparam \eventcounter[12] .cin_used = "true";
defparam \eventcounter[12] .lut_mask = "5a5f";
defparam \eventcounter[12] .operation_mode = "arithmetic";
defparam \eventcounter[12] .output_mode = "reg_only";
defparam \eventcounter[12] .register_cascade_mode = "off";
defparam \eventcounter[12] .sum_lutc_input = "cin";
defparam \eventcounter[12] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N5
maxii_lcell \eventcounter[13] (
// Equation(s):
// eventcounter[13] = DFFEAS(eventcounter[13] $ ((((!\eventcounter[12]~23 )))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[13]~17  = CARRY((eventcounter[13] & ((!\eventcounter[12]~23 ))))
// \eventcounter[13]~17COUT1_41  = CARRY((eventcounter[13] & ((!\eventcounter[12]~23 ))))

	.clk(\sigclk~combout ),
	.dataa(eventcounter[13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[12]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[13]),
	.cout(),
	.cout0(\eventcounter[13]~17 ),
	.cout1(\eventcounter[13]~17COUT1_41 ));
// synopsys translate_off
defparam \eventcounter[13] .cin_used = "true";
defparam \eventcounter[13] .lut_mask = "a50a";
defparam \eventcounter[13] .operation_mode = "arithmetic";
defparam \eventcounter[13] .output_mode = "reg_only";
defparam \eventcounter[13] .register_cascade_mode = "off";
defparam \eventcounter[13] .sum_lutc_input = "cin";
defparam \eventcounter[13] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N9
maxii_lcell \eventhold[13] (
// Equation(s):
// eventhold[13] = DFFEAS((((eventcounter[13]))), GLOBAL(\sigclk~combout ), VCC, , !\siggate~regout , , , , )

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(eventcounter[13]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventhold[13]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[13] .lut_mask = "ff00";
defparam \eventhold[13] .operation_mode = "normal";
defparam \eventhold[13] .output_mode = "reg_only";
defparam \eventhold[13] .register_cascade_mode = "off";
defparam \eventhold[13] .sum_lutc_input = "datac";
defparam \eventhold[13] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N0
maxii_lcell \eventhold[9] (
// Equation(s):
// \Mux0~3  = (\Mux0~2  & ((eventhold[13]) # ((readindex[3])))) # (!\Mux0~2  & (((eventhold[9] & !readindex[3]))))

	.clk(\sigclk~combout ),
	.dataa(\Mux0~2 ),
	.datab(eventhold[13]),
	.datac(eventcounter[9]),
	.datad(readindex[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~3 ),
	.regout(eventhold[9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[9] .lut_mask = "aad8";
defparam \eventhold[9] .operation_mode = "normal";
defparam \eventhold[9] .output_mode = "comb_only";
defparam \eventhold[9] .register_cascade_mode = "off";
defparam \eventhold[9] .sum_lutc_input = "qfbk";
defparam \eventhold[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N7
maxii_lcell \eventhold[12] (
// Equation(s):
// eventhold[12] = DFFEAS((((eventcounter[12]))), GLOBAL(\sigclk~combout ), VCC, , !\siggate~regout , , , , )

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(eventcounter[12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventhold[12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[12] .lut_mask = "ff00";
defparam \eventhold[12] .operation_mode = "normal";
defparam \eventhold[12] .output_mode = "reg_only";
defparam \eventhold[12] .register_cascade_mode = "off";
defparam \eventhold[12] .sum_lutc_input = "datac";
defparam \eventhold[12] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N8
maxii_lcell \eventhold[0] (
// Equation(s):
// eventhold[0] = DFFEAS((((eventcounter[0]))), GLOBAL(\sigclk~combout ), VCC, , !\siggate~regout , , , , )

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(eventcounter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventhold[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[0] .lut_mask = "ff00";
defparam \eventhold[0] .operation_mode = "normal";
defparam \eventhold[0] .output_mode = "reg_only";
defparam \eventhold[0] .register_cascade_mode = "off";
defparam \eventhold[0] .sum_lutc_input = "datac";
defparam \eventhold[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N4
maxii_lcell \eventhold[4] (
// Equation(s):
// \Mux0~4  = (readindex[3] & ((readindex[2] & (eventhold[0])) # (!readindex[2] & ((eventhold[4]))))) # (!readindex[3] & (((!readindex[2]))))

	.clk(\sigclk~combout ),
	.dataa(readindex[3]),
	.datab(eventhold[0]),
	.datac(eventcounter[4]),
	.datad(readindex[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~4 ),
	.regout(eventhold[4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[4] .lut_mask = "88f5";
defparam \eventhold[4] .operation_mode = "normal";
defparam \eventhold[4] .output_mode = "comb_only";
defparam \eventhold[4] .register_cascade_mode = "off";
defparam \eventhold[4] .sum_lutc_input = "qfbk";
defparam \eventhold[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N5
maxii_lcell \eventhold[8] (
// Equation(s):
// \Mux0~5  = (readindex[3] & (((\Mux0~4 )))) # (!readindex[3] & ((\Mux0~4  & (eventhold[12])) # (!\Mux0~4  & ((eventhold[8])))))

	.clk(\sigclk~combout ),
	.dataa(readindex[3]),
	.datab(eventhold[12]),
	.datac(eventcounter[8]),
	.datad(\Mux0~4 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~5 ),
	.regout(eventhold[8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[8] .lut_mask = "ee50";
defparam \eventhold[8] .operation_mode = "normal";
defparam \eventhold[8] .output_mode = "comb_only";
defparam \eventhold[8] .register_cascade_mode = "off";
defparam \eventhold[8] .sum_lutc_input = "qfbk";
defparam \eventhold[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N5
maxii_lcell \Mux0~6 (
// Equation(s):
// \Mux0~6_combout  = (readindex[0] & (((readindex[1] & \Mux0~5 )))) # (!readindex[0] & ((\Mux0~3 ) # ((!readindex[1]))))

	.clk(gnd),
	.dataa(readindex[0]),
	.datab(\Mux0~3 ),
	.datac(readindex[1]),
	.datad(\Mux0~5 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux0~6 .lut_mask = "e545";
defparam \Mux0~6 .operation_mode = "normal";
defparam \Mux0~6 .output_mode = "comb_only";
defparam \Mux0~6 .register_cascade_mode = "off";
defparam \Mux0~6 .sum_lutc_input = "datac";
defparam \Mux0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N6
maxii_lcell \eventcounter[14] (
// Equation(s):
// eventcounter[14] = DFFEAS(eventcounter[14] $ (((((!\eventcounter[12]~23  & \eventcounter[13]~17 ) # (\eventcounter[12]~23  & \eventcounter[13]~17COUT1_41 ))))), GLOBAL(\sigclk~combout ), VCC, , , , , , )
// \eventcounter[14]~9  = CARRY(((!\eventcounter[13]~17 )) # (!eventcounter[14]))
// \eventcounter[14]~9COUT1_42  = CARRY(((!\eventcounter[13]~17COUT1_41 )) # (!eventcounter[14]))

	.clk(\sigclk~combout ),
	.dataa(eventcounter[14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[12]~23 ),
	.cin0(\eventcounter[13]~17 ),
	.cin1(\eventcounter[13]~17COUT1_41 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[14]),
	.cout(),
	.cout0(\eventcounter[14]~9 ),
	.cout1(\eventcounter[14]~9COUT1_42 ));
// synopsys translate_off
defparam \eventcounter[14] .cin0_used = "true";
defparam \eventcounter[14] .cin1_used = "true";
defparam \eventcounter[14] .cin_used = "true";
defparam \eventcounter[14] .lut_mask = "5a5f";
defparam \eventcounter[14] .operation_mode = "arithmetic";
defparam \eventcounter[14] .output_mode = "reg_only";
defparam \eventcounter[14] .register_cascade_mode = "off";
defparam \eventcounter[14] .sum_lutc_input = "cin";
defparam \eventcounter[14] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N7
maxii_lcell \eventcounter[15] (
// Equation(s):
// eventcounter[15] = DFFEAS((eventcounter[15] $ ((!(!\eventcounter[12]~23  & \eventcounter[14]~9 ) # (\eventcounter[12]~23  & \eventcounter[14]~9COUT1_42 )))), GLOBAL(\sigclk~combout ), VCC, , , , , , )

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(eventcounter[15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\eventcounter[12]~23 ),
	.cin0(\eventcounter[14]~9 ),
	.cin1(\eventcounter[14]~9COUT1_42 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventcounter[15]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventcounter[15] .cin0_used = "true";
defparam \eventcounter[15] .cin1_used = "true";
defparam \eventcounter[15] .cin_used = "true";
defparam \eventcounter[15] .lut_mask = "c3c3";
defparam \eventcounter[15] .operation_mode = "normal";
defparam \eventcounter[15] .output_mode = "reg_only";
defparam \eventcounter[15] .register_cascade_mode = "off";
defparam \eventcounter[15] .sum_lutc_input = "cin";
defparam \eventcounter[15] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N8
maxii_lcell \eventhold[15] (
// Equation(s):
// eventhold[15] = DFFEAS(GND, GLOBAL(\sigclk~combout ), VCC, , !\siggate~regout , eventcounter[15], , , VCC)

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(eventcounter[15]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventhold[15]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[15] .lut_mask = "0000";
defparam \eventhold[15] .operation_mode = "normal";
defparam \eventhold[15] .output_mode = "reg_only";
defparam \eventhold[15] .register_cascade_mode = "off";
defparam \eventhold[15] .sum_lutc_input = "datac";
defparam \eventhold[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N9
maxii_lcell \eventhold[3] (
// Equation(s):
// eventhold[3] = DFFEAS((((eventcounter[3]))), GLOBAL(\sigclk~combout ), VCC, , !\siggate~regout , , , , )

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(eventcounter[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventhold[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[3] .lut_mask = "ff00";
defparam \eventhold[3] .operation_mode = "normal";
defparam \eventhold[3] .output_mode = "reg_only";
defparam \eventhold[3] .register_cascade_mode = "off";
defparam \eventhold[3] .sum_lutc_input = "datac";
defparam \eventhold[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N2
maxii_lcell \eventhold[11] (
// Equation(s):
// \Mux0~7  = (readindex[3] & (eventhold[3] & ((readindex[2])))) # (!readindex[3] & (((eventhold[11]) # (!readindex[2]))))

	.clk(\sigclk~combout ),
	.dataa(readindex[3]),
	.datab(eventhold[3]),
	.datac(eventcounter[11]),
	.datad(readindex[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~7 ),
	.regout(eventhold[11]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[11] .lut_mask = "d855";
defparam \eventhold[11] .operation_mode = "normal";
defparam \eventhold[11] .output_mode = "comb_only";
defparam \eventhold[11] .register_cascade_mode = "off";
defparam \eventhold[11] .sum_lutc_input = "qfbk";
defparam \eventhold[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N6
maxii_lcell \eventhold[7] (
// Equation(s):
// \Mux0~8  = (\Mux0~7  & ((eventhold[15]) # ((readindex[2])))) # (!\Mux0~7  & (((eventhold[7] & !readindex[2]))))

	.clk(\sigclk~combout ),
	.dataa(eventhold[15]),
	.datab(\Mux0~7 ),
	.datac(eventcounter[7]),
	.datad(readindex[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~8 ),
	.regout(eventhold[7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[7] .lut_mask = "ccb8";
defparam \eventhold[7] .operation_mode = "normal";
defparam \eventhold[7] .output_mode = "comb_only";
defparam \eventhold[7] .register_cascade_mode = "off";
defparam \eventhold[7] .sum_lutc_input = "qfbk";
defparam \eventhold[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y4_N9
maxii_lcell \eventhold[14] (
// Equation(s):
// eventhold[14] = DFFEAS(GND, GLOBAL(\sigclk~combout ), VCC, , !\siggate~regout , eventcounter[14], , , VCC)

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(eventcounter[14]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventhold[14]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[14] .lut_mask = "0000";
defparam \eventhold[14] .operation_mode = "normal";
defparam \eventhold[14] .output_mode = "reg_only";
defparam \eventhold[14] .register_cascade_mode = "off";
defparam \eventhold[14] .sum_lutc_input = "datac";
defparam \eventhold[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N3
maxii_lcell \eventhold[2] (
// Equation(s):
// eventhold[2] = DFFEAS((((eventcounter[2]))), GLOBAL(\sigclk~combout ), VCC, , !\siggate~regout , , , , )

	.clk(\sigclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(eventcounter[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(eventhold[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[2] .lut_mask = "ff00";
defparam \eventhold[2] .operation_mode = "normal";
defparam \eventhold[2] .output_mode = "reg_only";
defparam \eventhold[2] .register_cascade_mode = "off";
defparam \eventhold[2] .sum_lutc_input = "datac";
defparam \eventhold[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N0
maxii_lcell \eventhold[10] (
// Equation(s):
// \Mux0~0  = (readindex[3] & (readindex[2] & ((eventhold[2])))) # (!readindex[3] & (((eventhold[10])) # (!readindex[2])))

	.clk(\sigclk~combout ),
	.dataa(readindex[3]),
	.datab(readindex[2]),
	.datac(eventcounter[10]),
	.datad(eventhold[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~0 ),
	.regout(eventhold[10]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[10] .lut_mask = "d951";
defparam \eventhold[10] .operation_mode = "normal";
defparam \eventhold[10] .output_mode = "comb_only";
defparam \eventhold[10] .register_cascade_mode = "off";
defparam \eventhold[10] .sum_lutc_input = "qfbk";
defparam \eventhold[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N1
maxii_lcell \eventhold[6] (
// Equation(s):
// \Mux0~1  = (\Mux0~0  & ((eventhold[14]) # ((readindex[2])))) # (!\Mux0~0  & (((eventhold[6] & !readindex[2]))))

	.clk(\sigclk~combout ),
	.dataa(eventhold[14]),
	.datab(\Mux0~0 ),
	.datac(eventcounter[6]),
	.datad(readindex[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\siggate~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~1 ),
	.regout(eventhold[6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \eventhold[6] .lut_mask = "ccb8";
defparam \eventhold[6] .operation_mode = "normal";
defparam \eventhold[6] .output_mode = "comb_only";
defparam \eventhold[6] .register_cascade_mode = "off";
defparam \eventhold[6] .sum_lutc_input = "qfbk";
defparam \eventhold[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N1
maxii_lcell \Mux0~9 (
// Equation(s):
// \Mux0~9_combout  = (readindex[1] & (\Mux0~6_combout )) # (!readindex[1] & ((\Mux0~6_combout  & (\Mux0~8 )) # (!\Mux0~6_combout  & ((\Mux0~1 )))))

	.clk(gnd),
	.dataa(readindex[1]),
	.datab(\Mux0~6_combout ),
	.datac(\Mux0~8 ),
	.datad(\Mux0~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux0~9 .lut_mask = "d9c8";
defparam \Mux0~9 .operation_mode = "normal";
defparam \Mux0~9 .output_mode = "comb_only";
defparam \Mux0~9 .register_cascade_mode = "off";
defparam \Mux0~9 .sum_lutc_input = "datac";
defparam \Mux0~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N7
maxii_lcell syn1cpugate(
// Equation(s):
// \syn1cpugate~regout  = DFFEAS((((!\siggate~regout ))), GLOBAL(\refclk~combout ), VCC, , , , , , )

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\siggate~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\syn1cpugate~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam syn1cpugate.lut_mask = "00ff";
defparam syn1cpugate.operation_mode = "normal";
defparam syn1cpugate.output_mode = "reg_only";
defparam syn1cpugate.register_cascade_mode = "off";
defparam syn1cpugate.sum_lutc_input = "datac";
defparam syn1cpugate.synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N4
maxii_lcell cpugate(
// Equation(s):
// \cpugate~regout  = DFFEAS(((mux[2] & ((!\siggate~regout ))) # (!mux[2] & (\syn1cpugate~regout ))), GLOBAL(\refclk~combout ), VCC, , , , , , )

	.clk(\refclk~combout ),
	.dataa(vcc),
	.datab(\syn1cpugate~regout ),
	.datac(mux[2]),
	.datad(\siggate~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\cpugate~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam cpugate.lut_mask = "0cfc";
defparam cpugate.operation_mode = "normal";
defparam cpugate.output_mode = "reg_only";
defparam cpugate.register_cascade_mode = "off";
defparam cpugate.sum_lutc_input = "datac";
defparam cpugate.synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N8
maxii_lcell \led~reg0 (
// Equation(s):
// \led~reg0_regout  = DFFEAS((\LessThan0~31_combout ) # (((\LessThan0~26_combout ) # (!\LessThan1~31_combout )) # (!\count~0_combout )), GLOBAL(\refclk~combout ), VCC, , , , , , )

	.clk(\refclk~combout ),
	.dataa(\LessThan0~31_combout ),
	.datab(\count~0_combout ),
	.datac(\LessThan1~31_combout ),
	.datad(\LessThan0~26_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\led~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led~reg0 .lut_mask = "ffbf";
defparam \led~reg0 .operation_mode = "normal";
defparam \led~reg0 .output_mode = "reg_only";
defparam \led~reg0 .register_cascade_mode = "off";
defparam \led~reg0 .sum_lutc_input = "datac";
defparam \led~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \sigin1~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\sigin1~combout ),
	.padio(sigin1));
// synopsys translate_off
defparam \sigin1~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y4_N4
maxii_lcell \sigout~0 (
// Equation(s):
// \sigout~0_combout  = ((mux[1] & (\refclk~combout )) # (!mux[1] & ((\sigin1~combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(mux[1]),
	.datac(\refclk~combout ),
	.datad(\sigin1~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\sigout~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sigout~0 .lut_mask = "f3c0";
defparam \sigout~0 .operation_mode = "normal";
defparam \sigout~0 .output_mode = "comb_only";
defparam \sigout~0 .register_cascade_mode = "off";
defparam \sigout~0 .sum_lutc_input = "datac";
defparam \sigout~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_96,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \sigin2~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\sigin2~combout ),
	.padio(sigin2));
// synopsys translate_off
defparam \sigin2~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y4_N2
maxii_lcell \sigout~1 (
// Equation(s):
// \sigout~1_combout  = (mux[0] & (((!mux[1] & \sigin2~combout )))) # (!mux[0] & (\sigout~0_combout ))

	.clk(gnd),
	.dataa(\sigout~0_combout ),
	.datab(mux[1]),
	.datac(mux[0]),
	.datad(\sigin2~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\sigout~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sigout~1 .lut_mask = "3a0a";
defparam \sigout~1 .operation_mode = "normal";
defparam \sigout~1 .output_mode = "comb_only";
defparam \sigout~1 .register_cascade_mode = "off";
defparam \sigout~1 .sum_lutc_input = "datac";
defparam \sigout~1 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_15,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \miso~I (
	.datain(\Mux0~9_combout ),
	.oe(vcc),
	.combout(),
	.padio(miso));
// synopsys translate_off
defparam \miso~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \icp1~I (
	.datain(\cpugate~regout ),
	.oe(vcc),
	.combout(),
	.padio(icp1));
// synopsys translate_off
defparam \icp1~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_17,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \icp0~I (
	.datain(!\siggate~regout ),
	.oe(vcc),
	.combout(),
	.padio(icp0));
// synopsys translate_off
defparam \icp0~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \int1~I (
	.datain(eventcounter[15]),
	.oe(vcc),
	.combout(),
	.padio(int1));
// synopsys translate_off
defparam \int1~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_68,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \led2~I (
	.datain(!\ss~combout ),
	.oe(vcc),
	.combout(),
	.padio(led2));
// synopsys translate_off
defparam \led2~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_77,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \led~I (
	.datain(\led~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(led));
// synopsys translate_off
defparam \led~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \rampstopN~I (
	.datain(\cpugate~regout ),
	.oe(vcc),
	.combout(),
	.padio(rampstopN));
// synopsys translate_off
defparam \rampstopN~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \rampstartP~I (
	.datain(\siggate~regout ),
	.oe(vcc),
	.combout(),
	.padio(rampstartP));
// synopsys translate_off
defparam \rampstartP~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_97,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \sigout~I (
	.datain(\sigout~1_combout ),
	.oe(vcc),
	.combout(),
	.padio(sigout));
// synopsys translate_off
defparam \sigout~I .operation_mode = "output";
// synopsys translate_on

endmodule
